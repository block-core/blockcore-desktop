{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/application-state.service\";\nimport * as i2 from \"../../services/details.service\";\nimport * as i3 from \"../../services/api.service\";\nimport * as i4 from \"../../services/wallet.service\";\nimport * as i5 from \"@angular/material/snack-bar\";\nimport * as i6 from \"../../services/global.service\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/cdk/clipboard\";\nimport * as i10 from \"@angular/material/icon\";\nimport * as i11 from \"../../shared/pipes/coin-notation.pipe\";\n\nfunction DetailsComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2);\n    i0.ɵɵtext(2, \"Total Amount\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 3);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"coinNotation\");\n    i0.ɵɵelementStart(6, \"small\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(5, 2, ctx_r0.transaction.transactionAmount), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.coinUnit);\n  }\n}\n\nfunction DetailsComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2);\n    i0.ɵɵtext(2, \"Total Amount\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 3);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"coinNotation\");\n    i0.ɵɵelementStart(6, \"small\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(5, 2, ctx_r1.transaction.transactionAmount + ctx_r1.transaction.transactionFee), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r1.coinUnit);\n  }\n}\n\nfunction DetailsComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2);\n    i0.ɵɵtext(2, \"Amount Sent\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 3);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"coinNotation\");\n    i0.ɵɵelementStart(6, \"small\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(5, 2, ctx_r2.transaction.transactionAmount), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r2.coinUnit);\n  }\n}\n\nfunction DetailsComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2);\n    i0.ɵɵtext(2, \"Fee\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 3);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"coinNotation\");\n    i0.ɵɵelementStart(6, \"small\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(5, 2, ctx_r3.transaction.transactionFee), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r3.coinUnit);\n  }\n}\n\nfunction DetailsComponent_span_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵtext(1, \"Unconfirmed\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction DetailsComponent_span_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r5.confirmations);\n  }\n} // Until Angular supports improved named routing and lazy-loading, we'll have to use this details controller for all details pain.\n\n\nexport class DetailsComponent {\n  appState;\n  detailsService;\n  apiService;\n  walletService;\n  snackBar;\n  globalService;\n  hostClass = true;\n  copied = false;\n  coinUnit;\n\n  constructor(appState, detailsService, apiService, walletService, snackBar, globalService) {\n    this.appState = appState;\n    this.detailsService = detailsService;\n    this.apiService = apiService;\n    this.walletService = walletService;\n    this.snackBar = snackBar;\n    this.globalService = globalService;\n  }\n\n  get transaction() {\n    return this.detailsService.item;\n  }\n\n  get confirmations() {\n    if (this.transaction) {\n      if (this.transaction.transactionConfirmedInBlock) {\n        return this.walletService.lastBlockSyncedHeight - Number(this.transaction.transactionConfirmedInBlock) + 1;\n      } else {\n        return 0;\n      }\n    }\n\n    return 0;\n  }\n\n  ngOnInit() {\n    this.coinUnit = this.globalService.getCoinUnit();\n  }\n\n  ngOnDestroy() {}\n\n  onCopiedClick() {\n    this.snackBar.open('The transaction ID has been copied to your clipboard.', null, {\n      duration: 3000\n    });\n    return false;\n  }\n\n  static ɵfac = function DetailsComponent_Factory(t) {\n    return new (t || DetailsComponent)(i0.ɵɵdirectiveInject(i1.ApplicationStateService), i0.ɵɵdirectiveInject(i2.DetailsService), i0.ɵɵdirectiveInject(i3.ApiService), i0.ɵɵdirectiveInject(i4.WalletService), i0.ɵɵdirectiveInject(i5.MatSnackBar), i0.ɵɵdirectiveInject(i6.GlobalService));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DetailsComponent,\n    selectors: [[\"app-details\"]],\n    hostVars: 2,\n    hostBindings: function DetailsComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"details\", ctx.hostClass);\n      }\n    },\n    decls: 36,\n    vars: 15,\n    consts: [[1, \"content\", \"details-content\", \"content-big-margin\"], [1, \"details-row\"], [1, \"details-row-title\"], [1, \"details-row-value\"], [\"class\", \"details-row\", 4, \"ngIf\"], [\"class\", \"badge badge-warning\", 4, \"ngIf\"], [\"class\", \"badge badge-success\", 4, \"ngIf\"], [3, \"title\"], [\"mat-icon-button\", \"\", \"ngbTooltip\", \"Copy to clipboard\", 3, \"cdkCopyToClipboard\", \"click\"], [1, \"badge\", \"badge-warning\"], [1, \"badge\", \"badge-success\"]],\n    template: function DetailsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵtext(3, \"Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(6, DetailsComponent_div_6_Template, 8, 4, \"div\", 4);\n        i0.ɵɵtemplate(7, DetailsComponent_div_7_Template, 8, 4, \"div\", 4);\n        i0.ɵɵtemplate(8, DetailsComponent_div_8_Template, 8, 4, \"div\", 4);\n        i0.ɵɵtemplate(9, DetailsComponent_div_9_Template, 8, 4, \"div\", 4);\n        i0.ɵɵelementStart(10, \"div\", 1)(11, \"div\", 2);\n        i0.ɵɵtext(12, \"Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 3);\n        i0.ɵɵtext(14);\n        i0.ɵɵpipe(15, \"date\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 1)(17, \"div\", 2);\n        i0.ɵɵtext(18, \"Block\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 3);\n        i0.ɵɵtext(20);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 1)(22, \"div\", 2);\n        i0.ɵɵtext(23, \"Confirmations\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 3);\n        i0.ɵɵtemplate(25, DetailsComponent_span_25_Template, 2, 0, \"span\", 5);\n        i0.ɵɵtemplate(26, DetailsComponent_span_26_Template, 2, 1, \"span\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"div\", 1)(28, \"div\", 2);\n        i0.ɵɵtext(29, \"Transaction ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\", 3)(31, \"code\", 7);\n        i0.ɵɵtext(32);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function DetailsComponent_Template_button_click_33_listener() {\n          return ctx.onCopiedClick();\n        });\n        i0.ɵɵelementStart(34, \"mat-icon\");\n        i0.ɵɵtext(35, \"content_copy\");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.transaction.transactionType);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.transaction.transactionType === \"received\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.transaction.transactionType === \"sent\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.transaction.transactionType === \"sent\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.transaction.transactionType === \"sent\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(15, 12, ctx.transaction.transactionTimestamp * 1000, \"medium\"));\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\"#\", ctx.transaction.transactionConfirmedInBlock, \"\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.confirmations < 1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.confirmations >= 1);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"title\", ctx.transaction.transactionId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\", ctx.transaction.transactionId.substring(0, 12), \"...\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"cdkCopyToClipboard\", ctx.transaction.transactionId);\n      }\n    },\n    directives: [i7.NgIf, i8.MatButton, i9.CdkCopyToClipboard, i10.MatIcon],\n    pipes: [i11.CoinNotationPipe, i7.DatePipe],\n    styles: [\".details .details-content {\\n  display: flex;\\n  flex-direction: column;\\n}\\n.details .details-row {\\n  display: flex;\\n  flex-direction: row;\\n  margin-bottom: 8px;\\n}\\n.details .details-row-title {\\n  font-weight: bold;\\n  width: 120px;\\n}\\n.details .details-full-width {\\n  min-width: 100% !important;\\n}\"],\n    encapsulation: 2\n  });\n}","map":null,"metadata":{},"sourceType":"module"}