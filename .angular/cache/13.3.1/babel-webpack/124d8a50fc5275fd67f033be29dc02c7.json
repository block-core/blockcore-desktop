{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport { PasswordValidationDirective } from '../../../shared/directives/password-validation.directive';\nimport { WalletCreation } from '../../../classes/wallet-creation';\nimport * as bip39 from 'bip39';\nimport * as bip32 from 'bip32';\nimport * as bip38 from '../../../../libs/bip38';\nimport * as city from 'city-lib';\nimport { DatabaseStorageService } from 'src/app/services/storage.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/authentication.service\";\nimport * as i2 from \"src/app/services/application-state.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../../services/logger.service\";\nimport * as i6 from \"@angular/material/dialog\";\nimport * as i7 from \"@angular/material/snack-bar\";\nimport * as i8 from \"../../../services/global.service\";\nimport * as i9 from \"../../../services/api.service\";\nimport * as i10 from \"@angular/material/stepper\";\nimport * as i11 from \"@angular/material/button\";\nimport * as i12 from \"@angular/material/icon\";\nimport * as i13 from \"@angular/material/form-field\";\nimport * as i14 from \"@angular/material/input\";\nimport * as i15 from \"@angular/common\";\nimport * as i16 from \"@angular/material/progress-spinner\";\n\nfunction CreateAccountComponent_mat_error_103_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Passwords must match. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CreateAccountComponent_div_123_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵelement(1, \"mat-spinner\", 32);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"diameter\", 24);\n  }\n}\n\nexport class CreateAccountComponent {\n  authService;\n  appState;\n  router;\n  fb;\n  log;\n  dialog;\n  snackBar;\n  globalService;\n  apiService;\n  hostClass = true;\n  accountPasswordForm;\n  accountSeedForm;\n  accountNameForm;\n  icons;\n  mnemonic;\n  password1 = '';\n  password2 = '';\n  seedExtension = '';\n  accountName = 'main';\n  currentDate;\n  verification;\n  saving;\n\n  constructor(authService, appState, router, fb, log, dialog, snackBar, globalService, apiService) {\n    this.authService = authService;\n    this.appState = appState;\n    this.router = router;\n    this.fb = fb;\n    this.log = log;\n    this.dialog = dialog;\n    this.snackBar = snackBar;\n    this.globalService = globalService;\n    this.apiService = apiService;\n    this.onGenerate();\n  }\n\n  ngOnInit() {\n    this.accountSeedForm = this.fb.group({\n      seedExtension: ['', {\n        updateOn: 'blur'\n      }]\n    });\n    this.accountPasswordForm = this.fb.group({\n      accountPassword: ['', {\n        validators: Validators.compose([Validators.required, Validators.minLength(1)])\n      }],\n      accountPasswordConfirmation: ['']\n    }, {\n      updateOn: 'blur',\n      validator: PasswordValidationDirective.MatchPassword\n    });\n    this.accountNameForm = this.fb.group({\n      accountName: new FormControl('', Validators.compose([Validators.required, Validators.minLength(1), Validators.maxLength(24), Validators.pattern(/^[a-zA-Z0-9]*$/)]))\n    });\n  }\n\n  onPrint() {\n    window.print();\n  }\n\n  onGenerate() {\n    if (this.appState.isSimpleMode) {\n      this.getNewMnemonicLocal();\n    } else {\n      this.getNewMnemonic();\n    }\n\n    this.currentDate = new Date().toDateString();\n  }\n\n  getNewMnemonicLocal() {\n    this.mnemonic = bip39.generateMnemonic();\n    this.mnemonic = 'mystery problem faith negative member bottom concert bundle asthma female process twelve';\n    this.verification = this.mnemonic.split(' ')[2];\n  }\n\n  getNewMnemonic() {\n    this.apiService.getNewMnemonic().subscribe(response => {\n      // if (response.status >= 200 && response.status < 400) {\n      this.mnemonic = response;\n      this.verification = this.mnemonic.split(' ')[2]; // }\n    }, error => {\n      this.apiService.handleException(error);\n    });\n  }\n\n  createAccount() {\n    this.saving = true;\n    this.log.info('Create account:', this.accountName);\n    this.createWallet(new WalletCreation(this.accountName, this.mnemonic, this.password1, this.seedExtension));\n  }\n\n  getAddress(node, network) {\n    return city.payments.p2pkh({\n      pubkey: node.publicKey,\n      network\n    }).address;\n  }\n\n  createWallet(wallet) {\n    this.log.info('Creating wallet with: ', wallet);\n\n    if (this.appState.isSimpleMode) {\n      // C#: HdOperations.GetExtendedKey(recoveryPhrase, string.Empty);\n      bip39.mnemonicToSeed(this.mnemonic, wallet.passPhrase).then(masterSeed => {\n        const self = this;\n        const masterNode = bip32.fromSeed(masterSeed, this.appState.networkDefinition); // eslint-disable-next-line\n\n        const accountNode = masterNode.derivePath(\"m/44'/1926'/0'\"); // TODO: Get the coin type from network definition.\n\n        const xpub = accountNode.neutered().toBase58(); // bip38.encryptAsync(masterNode.privateKey, true, wallet.password, (out) => {\n        // }, null, this.appState.networkParams);\n        // eslint-disable-next-line prefer-const\n\n        let encryptedKeySeed = bip38.encrypt(masterNode.privateKey, true, wallet.password, null, null, this.appState.networkParams); // Instantiate it\n\n        const db = new DatabaseStorageService('cityhub'); // Open it\n\n        db.open().catch(err => {\n          console.error(`Open failed: ${err.stack}`);\n        });\n        db.wallets.add({\n          name: wallet.name,\n          isExtPubKeyWallet: false,\n          extPubKey: xpub,\n          encryptedSeed: encryptedKeySeed,\n          chainCode: masterNode.chainCode,\n          network: 'CityMain',\n          creationTime: Date.now() / 1000,\n          coinType: 1926,\n          lastBlockSyncedHeight: 0,\n          lastBlockSyncedHash: ''\n        });\n        self.saving = false;\n        self.log.info('Wallet Created!');\n        self.snackBar.open('Account successfully created!', null, {\n          duration: 3000\n        });\n        self.router.navigateByUrl('/login');\n      });\n    } else {\n      this.apiService.createWallet(wallet).subscribe(response => {\n        this.saving = false;\n        this.log.info('Wallet Created!');\n        this.snackBar.open('Account successfully created!', null, {\n          duration: 3000\n        });\n        this.router.navigateByUrl('/login');\n      }, error => {\n        this.saving = false;\n        this.apiService.handleException(error);\n      });\n    }\n  }\n\n  static ɵfac = function CreateAccountComponent_Factory(t) {\n    return new (t || CreateAccountComponent)(i0.ɵɵdirectiveInject(i1.AuthenticationService), i0.ɵɵdirectiveInject(i2.ApplicationStateService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i5.Logger), i0.ɵɵdirectiveInject(i6.MatDialog), i0.ɵɵdirectiveInject(i7.MatSnackBar), i0.ɵɵdirectiveInject(i8.GlobalService), i0.ɵɵdirectiveInject(i9.ApiService));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateAccountComponent,\n    selectors: [[\"app-account-create\"]],\n    hostVars: 2,\n    hostBindings: function CreateAccountComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"account-create\", ctx.hostClass);\n      }\n    },\n    decls: 129,\n    vars: 22,\n    consts: [[1, \"content\", \"print-hidden\"], [1, \"mat-h1\"], [\"linear\", \"\", 1, \"print-hidden\"], [\"label\", \"Introduction\", \"editable\", \"true\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"matStepperNext\", \"\", \"type\", \"button\"], [\"mat-raised-button\", \"\", \"routerLink\", \"/login\", \"matStepperPrevious\", \"\", \"type\", \"button\"], [\"label\", \"Recovery phrase\", \"editable\", \"true\"], [1, \"mnemonic\"], [\"mat-icon-button\", \"\", \"title\", \"Print your mnemonic\", 3, \"click\"], [\"aria-label\", \"Print\"], [\"mat-raised-button\", \"\", \"matStepperPrevious\", \"\", \"type\", \"button\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"matStepperNext\", \"\", \"type\", \"button\", 3, \"disabled\"], [\"label\", \"Verification\", \"editable\", \"true\"], [\"type\", \"button\", \"color\", \"primary\", \"mat-raised-button\", \"\"], [\"type\", \"button\", \"color\", \"primary\", \"matStepperNext\", \"\", \"mat-raised-button\", \"\"], [\"label\", \"Extension word (optional)\", \"editable\", \"true\", 3, \"stepControl\"], [3, \"formGroup\"], [1, \"input-full-width\"], [\"matInput\", \"\", \"type\", \"text\", \"placeholder\", \"Enter any extension word (can be empty)\", \"name\", \"seedExtension\", \"formControlName\", \"seedExtension\", 3, \"formGroup\", \"ngModel\", \"ngModelChange\"], [\"label\", \"Password\", \"editable\", \"true\", 3, \"stepControl\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Enter your password\", \"name\", \"accountPassword\", \"formControlName\", \"accountPassword\", \"autocomplete\", \"new-password\", 3, \"formGroup\", \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Enter your password again\", \"name\", \"accountPasswordConfirmation\", \"formControlName\", \"accountPasswordConfirmation\", \"autocomplete\", \"new-password\", 3, \"formGroup\", \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"], [\"label\", \"Name\", \"editable\", \"true\", 3, \"stepControl\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"formControlName\", \"accountName\", \"name\", \"accountName\", \"placeholder\", \"Fill out account name\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", \"color\", \"primary\", \"matStepperNext\", \"\", \"mat-raised-button\", \"\", 3, \"disabled\", \"click\"], [\"class\", \"spinner-container\", 4, \"ngIf\"], [1, \"print-visible\"], [1, \"mnemonic-print\"], [1, \"mnemonic-date\"], [1, \"spinner-container\"], [3, \"diameter\"]],\n    template: function CreateAccountComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n        i0.ɵɵtext(2, \"Create an account\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-vertical-stepper\", 2)(4, \"mat-step\", 3)(5, \"p\")(6, \"strong\");\n        i0.ɵɵtext(7, \"Make sure nobody is watching your screen.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"p\");\n        i0.ɵɵtext(9, \" I'll generate a random 12 word \");\n        i0.ɵɵelementStart(10, \"strong\");\n        i0.ɵɵtext(11, \"recovery phrase\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(12, \" for you. It is very important that you remember this and keep it safe. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"p\");\n        i0.ɵɵtext(14, \" The \");\n        i0.ɵɵelementStart(15, \"strong\");\n        i0.ɵɵtext(16, \"recovery phrase\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(17, \" can be used to restore your account in the future, on this or another device. \");\n        i0.ɵɵelementStart(18, \"strong\");\n        i0.ɵɵtext(19, \"You are responsible\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(20, \" for keeping it safe. Nobody can restore it for you, if you lose it. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\")(22, \"button\", 4);\n        i0.ɵɵtext(23, \"I understand\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"button\", 5);\n        i0.ɵɵtext(25, \"Cancel\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"mat-step\", 6)(27, \"div\")(28, \"strong\");\n        i0.ɵɵtext(29, \"Your personal recovery phrase:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\", 7);\n        i0.ɵɵtext(31);\n        i0.ɵɵelementStart(32, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function CreateAccountComponent_Template_button_click_32_listener() {\n          return ctx.onPrint();\n        });\n        i0.ɵɵelementStart(33, \"mat-icon\", 9);\n        i0.ɵɵtext(34, \"print\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(35, \"p\");\n        i0.ɵɵtext(36, \" It is important that you remember this \");\n        i0.ɵɵelementStart(37, \"strong\");\n        i0.ɵɵtext(38, \"recovery phrase\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(39, \" (the order is important) and save it securely. You can click the printer icon to save as PDF or print to paper, or write it down carefully and correctly. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"p\")(41, \"strong\");\n        i0.ɵɵtext(42, \"IMPORTANT:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(43, \"br\");\n        i0.ɵɵtext(44, \" - Never disclose this sentence to anyone.\");\n        i0.ɵɵelement(45, \"br\");\n        i0.ɵɵtext(46, \" - Never type this sentence on a website.\");\n        i0.ɵɵelement(47, \"br\");\n        i0.ɵɵtext(48, \" - Do not store it electronically. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"div\")(50, \"button\", 10);\n        i0.ɵɵtext(51, \"Back\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"button\", 11);\n        i0.ɵɵtext(53, \"Yes, it is safe!\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(54, \"mat-step\", 12)(55, \"p\");\n        i0.ɵɵtext(56, \" Select the correct third word from the \");\n        i0.ɵɵelementStart(57, \"strong\");\n        i0.ɵɵtext(58, \"recovery phrase\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(59, \": \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(60, \"div\")(61, \"button\", 10);\n        i0.ɵɵtext(62, \"Back\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(63, \"button\", 13);\n        i0.ɵɵtext(64, \"grape\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(65, \"button\", 14);\n        i0.ɵɵtext(66);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(67, \"button\", 13);\n        i0.ɵɵtext(68, \"cute\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(69, \"mat-step\", 15)(70, \"form\", 16)(71, \"strong\");\n        i0.ɵɵtext(72, \"Your personal extension word:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(73, \"p\");\n        i0.ɵɵtext(74, \" If you want to increase the security of your wallet, you can enter your personal extension word. This adds a two-factor security to your wallet, meaning that you will need both the \");\n        i0.ɵɵelementStart(75, \"strong\");\n        i0.ɵɵtext(76, \"recovery phrase\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(77, \" of 12 words, which you have written down for backup, and the extension word you enter below.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(78, \"p\");\n        i0.ɵɵtext(79, \"Make sure you can easily remember this extension word. If you lose it, then you will not be able to restore your wallet, even if you have a backup of the \");\n        i0.ɵɵelementStart(80, \"strong\");\n        i0.ɵɵtext(81, \"recovery phrase\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(82, \". Do not overestimate your ability to remember this word.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(83, \"p\");\n        i0.ɵɵtext(84, \"If you do not want to use a personal extension word, you can leave this field empty.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(85, \"p\")(86, \"mat-form-field\", 17)(87, \"input\", 18);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateAccountComponent_Template_input_ngModelChange_87_listener($event) {\n          return ctx.seedExtension = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(88, \"div\")(89, \"button\", 10);\n        i0.ɵɵtext(90, \"Back\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(91, \"button\", 4);\n        i0.ɵɵtext(92, \"Next\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(93, \"mat-step\", 19)(94, \"form\", 16)(95, \"p\");\n        i0.ɵɵtext(96, \" Provide a password that we can use to protect your wallet when it is saved. You will be prompted to enter this passord every time your start Blockcore Hub.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(97, \"p\")(98, \"mat-form-field\", 17)(99, \"input\", 20);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateAccountComponent_Template_input_ngModelChange_99_listener($event) {\n          return ctx.password1 = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(100, \"p\")(101, \"mat-form-field\", 17)(102, \"input\", 21);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateAccountComponent_Template_input_ngModelChange_102_listener($event) {\n          return ctx.password2 = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(103, CreateAccountComponent_mat_error_103_Template, 2, 0, \"mat-error\", 22);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(104, \"div\")(105, \"button\", 10);\n        i0.ɵɵtext(106, \"Back\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(107, \"button\", 11);\n        i0.ɵɵtext(108, \"Next\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(109, \"mat-step\", 23)(110, \"form\", 16)(111, \"p\");\n        i0.ɵɵtext(112, \" You can name your account here, or keep the default: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(113, \"p\")(114, \"mat-form-field\", 24)(115, \"mat-label\");\n        i0.ɵɵtext(116, \"Account name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(117, \"input\", 25);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateAccountComponent_Template_input_ngModelChange_117_listener($event) {\n          return ctx.accountName = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(118, \"div\")(119, \"button\", 10);\n        i0.ɵɵtext(120, \"Back\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(121, \"button\", 26);\n        i0.ɵɵlistener(\"click\", function CreateAccountComponent_Template_button_click_121_listener() {\n          return ctx.createAccount();\n        });\n        i0.ɵɵtext(122, \"Create account \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(123, CreateAccountComponent_div_123_Template, 2, 1, \"div\", 27);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(124, \"div\", 28)(125, \"div\", 29);\n        i0.ɵɵtext(126);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(127, \"div\", 30);\n        i0.ɵɵtext(128);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(31);\n        i0.ɵɵtextInterpolate1(\"\", ctx.mnemonic, \" \");\n        i0.ɵɵadvance(21);\n        i0.ɵɵproperty(\"disabled\", !ctx.mnemonic);\n        i0.ɵɵadvance(14);\n        i0.ɵɵtextInterpolate(ctx.verification);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"stepControl\", ctx.accountSeedForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.accountSeedForm);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"formGroup\", ctx.accountSeedForm)(\"ngModel\", ctx.seedExtension);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"stepControl\", ctx.accountPasswordForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.accountPasswordForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.accountPasswordForm)(\"ngModel\", ctx.password1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.accountPasswordForm)(\"ngModel\", ctx.password2);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.accountPasswordForm.get(\"accountPasswordConfirmation\").hasError(\"accountPasswordConfirmation\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", ctx.accountPasswordForm.invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"stepControl\", ctx.accountNameForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.accountNameForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.accountName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", ctx.saving || ctx.accountNameForm.invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.saving);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.mnemonic);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Generated on \", ctx.currentDate, \"\");\n      }\n    },\n    directives: [i10.MatStepper, i10.MatStep, i11.MatButton, i10.MatStepperNext, i10.MatStepperPrevious, i3.RouterLink, i12.MatIcon, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i13.MatFormField, i14.MatInput, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlName, i15.NgIf, i13.MatError, i13.MatLabel, i16.MatProgressSpinner],\n    styles: [\".account-create button {\\n  margin-right: 6px;\\n}\\n.account-create .account-create .mat-progress-spinner {\\n  display: inline-block;\\n}\\n.account-create .spinner-container {\\n  vertical-align: middle;\\n  display: inline-block;\\n}\\n.account-create .mnemonic, .account-create .mnemonic-print {\\n  font-size: 1.2rem;\\n  margin-top: 22px;\\n  margin-bottom: 22px;\\n  background-color: white;\\n  color: black;\\n  padding: 20px;\\n  line-height: 40px;\\n  vertical-align: bottom;\\n  align-content: center;\\n}\\n.account-create .mnemonic-print {\\n  color: black;\\n}\\n.account-create .mnemonic-date {\\n  font-size: 1rem;\\n  color: black;\\n  padding: 20px;\\n}\"],\n    encapsulation: 2\n  });\n}","map":null,"metadata":{},"sourceType":"module"}