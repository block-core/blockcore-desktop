{"ast":null,"code":"import _classCallCheck from \"D:\\\\Github\\\\Miladsoft\\\\blockcore-hub-1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"D:\\\\Github\\\\Miladsoft\\\\blockcore-hub-1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { PasswordValidationDirective } from '../../../shared/directives/password-validation.directive';\nimport { WalletRecovery } from '../../../classes/wallet-recovery';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/authentication.service\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../../services/application-state.service\";\nimport * as i5 from \"../../../services/api.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"@angular/material/card\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/material/datepicker\";\nimport * as i12 from \"@angular/material/button\";\nimport * as i13 from \"@angular/material/progress-spinner\";\n\nfunction RecoverAccountComponent_mat_error_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Passwords must match. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RecoverAccountComponent_div_60_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵelement(1, \"mat-spinner\", 19);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"diameter\", 24);\n  }\n}\n\nexport var RecoverAccountComponent = /*#__PURE__*/(function () {\n  var RecoverAccountComponent = /*#__PURE__*/function () {\n    function RecoverAccountComponent(authService, snackBar, router, appState, apiService, datePipe) {\n      _classCallCheck(this, RecoverAccountComponent);\n\n      this.authService = authService;\n      this.snackBar = snackBar;\n      this.router = router;\n      this.appState = appState;\n      this.apiService = apiService;\n      this.datePipe = datePipe;\n      this.hostClass = true;\n      this.seedExtension = '';\n      this.password1 = '';\n      this.password2 = '';\n      this.accountName = 'main';\n      this.form = new FormGroup({\n        accountPassword: new FormControl('', {\n          updateOn: 'blur'\n        }),\n        seedExtension: new FormControl('', {\n          updateOn: 'blur'\n        }),\n        accountMnemonic: new FormControl('', Validators.required),\n        accountDate: new FormControl('', Validators.required),\n        accountPasswordConfirmation: new FormControl('', {\n          updateOn: 'blur'\n        }),\n        accountName: new FormControl('', Validators.compose([Validators.required, Validators.minLength(1), Validators.maxLength(24), Validators.pattern(/^[a-zA-Z0-9]*$/)]))\n      }, PasswordValidationDirective.MatchPassword);\n      this.minDate = this.apiService.genesisDate;\n      this.maxDate = new Date(); // Set to current date.\n\n      this.accountName = 'main';\n    }\n\n    _createClass(RecoverAccountComponent, [{\n      key: \"restoreAccount\",\n      value: function restoreAccount() {\n        this.saving = true;\n        var recoveryDate = new Date(this.form.get('accountDate').value);\n        recoveryDate.setDate(recoveryDate.getDate() - 1);\n        this.walletRecovery = new WalletRecovery(this.accountName, this.mnemonic, this.password1, this.seedExtension, recoveryDate);\n        this.recoverWallet(this.walletRecovery);\n      }\n    }, {\n      key: \"recoverWallet\",\n      value: function recoverWallet(_recoverWallet) {\n        var _this = this;\n\n        this.apiService.recoverWallet(_recoverWallet).subscribe(function (response) {\n          _this.snackBar.open('Your wallet has been recovered.', null, {\n            duration: 3000\n          });\n\n          localStorage.setItem('Network:Wallet', _recoverWallet.name);\n\n          _this.router.navigateByUrl('/login');\n        }, function (error) {\n          _this.saving = false;\n\n          _this.apiService.handleException(error);\n        });\n      }\n    }]);\n\n    return RecoverAccountComponent;\n  }();\n\n  RecoverAccountComponent.ɵfac = function RecoverAccountComponent_Factory(t) {\n    return new (t || RecoverAccountComponent)(i0.ɵɵdirectiveInject(i1.AuthenticationService), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ApplicationStateService), i0.ɵɵdirectiveInject(i5.ApiService), i0.ɵɵdirectiveInject(i6.DatePipe));\n  };\n\n  RecoverAccountComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RecoverAccountComponent,\n    selectors: [[\"app-account-recover\"]],\n    hostVars: 2,\n    hostBindings: function RecoverAccountComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"account-recover\", ctx.hostClass);\n      }\n    },\n    decls: 61,\n    vars: 22,\n    consts: [[1, \"content\"], [1, \"mat-h1\"], [3, \"formGroup\"], [1, \"mat-h2\"], [\"matInput\", \"\", \"formControlName\", \"accountDate\", \"placeholder\", \"Choose a date\", 3, \"min\", \"max\", \"ngModel\", \"matDatepicker\", \"ngModelChange\"], [\"matSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [1, \"input-full-width\"], [\"matInput\", \"\", \"formControlName\", \"accountMnemonic\", \"id\", \"accountMnemonic\", \"placeholder\", \"Fill out recovery phrase\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"formControlName\", \"seedExtension\", \"id\", \"seedExtension\", \"placeholder\", \"Enter your extension word (can be empty)\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Enter your password\", \"name\", \"accountPassword\", \"formControlName\", \"accountPassword\", \"autocomplete\", \"new-password\", 3, \"formGroup\", \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Enter your password again\", \"name\", \"accountPasswordConfirmation\", \"formControlName\", \"accountPasswordConfirmation\", \"autocomplete\", \"new-password\", 3, \"formGroup\", \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"formControlName\", \"accountName\", \"name\", \"accountName\", \"placeholder\", \"Fill out account name\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", \"color\", \"primary\", \"mat-raised-button\", \"\", 3, \"disabled\", \"click\"], [\"mat-raised-button\", \"\", \"routerLink\", \"/login\", \"type\", \"button\"], [\"class\", \"spinner-container\", 4, \"ngIf\"], [1, \"spinner-container\"], [3, \"diameter\"]],\n    template: function RecoverAccountComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n        i0.ɵɵtext(2, \"Restore account\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 2)(4, \"p\");\n        i0.ɵɵtext(5, \"If you already have an account, you can restore it here. You need your 12-word \");\n        i0.ɵɵelementStart(6, \"strong\");\n        i0.ɵɵtext(7, \"recovery phrase\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(8, \" that was given to your when you first created your account, and approximately the date you created your account.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"br\");\n        i0.ɵɵelementStart(10, \"mat-card\")(11, \"h2\", 3);\n        i0.ɵɵtext(12, \" What is the earliest possible date your created your account? \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"p\")(14, \"mat-form-field\")(15, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function RecoverAccountComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.accountDate = $event;\n        });\n        i0.ɵɵpipe(16, \"date\");\n        i0.ɵɵpipe(17, \"date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"mat-datepicker-toggle\", 5)(19, \"mat-datepicker\", null, 6);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"mat-card\")(22, \"h2\", 3);\n        i0.ɵɵtext(23, \"What is your 12-word \");\n        i0.ɵɵelementStart(24, \"strong\");\n        i0.ɵɵtext(25, \"recovery phrase\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(26, \" you saw when you created your account?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"p\")(28, \"mat-form-field\", 7)(29, \"textarea\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function RecoverAccountComponent_Template_textarea_ngModelChange_29_listener($event) {\n          return ctx.mnemonic = $event;\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(30, \"mat-card\")(31, \"h2\", 3);\n        i0.ɵɵtext(32, \"What is your personal extension word, if any, you used when you created your account?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"p\")(34, \"mat-form-field\", 7)(35, \"textarea\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function RecoverAccountComponent_Template_textarea_ngModelChange_35_listener($event) {\n          return ctx.seedExtension = $event;\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(36, \"mat-card\")(37, \"h2\", 3);\n        i0.ɵɵtext(38, \"What is the password for your account?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"p\");\n        i0.ɵɵtext(40, \"Provide a password that we can use to protect your wallet when it is saved. You can choose something other than what you had before. You will be prompted to enter this passord every time your start Blockcore Hub.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"p\")(42, \"mat-form-field\", 7)(43, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function RecoverAccountComponent_Template_input_ngModelChange_43_listener($event) {\n          return ctx.password1 = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(44, \"p\")(45, \"mat-form-field\", 7)(46, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function RecoverAccountComponent_Template_input_ngModelChange_46_listener($event) {\n          return ctx.password2 = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(47, RecoverAccountComponent_mat_error_47_Template, 2, 0, \"mat-error\", 12);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(48, \"mat-card\")(49, \"h2\", 3);\n        i0.ɵɵtext(50, \" What do you want to name your account? \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"p\")(52, \"mat-form-field\", 13)(53, \"mat-label\");\n        i0.ɵɵtext(54, \"Account name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(55, \"input\", 14);\n        i0.ɵɵlistener(\"ngModelChange\", function RecoverAccountComponent_Template_input_ngModelChange_55_listener($event) {\n          return ctx.accountName = $event;\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(56, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function RecoverAccountComponent_Template_button_click_56_listener() {\n          return ctx.restoreAccount();\n        });\n        i0.ɵɵtext(57, \"Restore account\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(58, \"button\", 16);\n        i0.ɵɵtext(59, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(60, RecoverAccountComponent_div_60_Template, 2, 1, \"div\", 17);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        var _r0 = i0.ɵɵreference(20);\n\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"min\", i0.ɵɵpipeBind2(16, 16, ctx.minDate, \"yyyy-MM-dd\"))(\"max\", i0.ɵɵpipeBind2(17, 19, ctx.maxDate, \"yyyy-MM-dd\"))(\"ngModel\", ctx.accountDate)(\"matDatepicker\", _r0);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"for\", _r0);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngModel\", ctx.mnemonic);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.seedExtension);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.form)(\"ngModel\", ctx.password1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.form)(\"ngModel\", ctx.password2);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.get(\"accountPasswordConfirmation\").hasError(\"accountPasswordConfirmation\"));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.accountName);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.saving || ctx.form.invalid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.saving);\n      }\n    },\n    directives: [i7.ɵNgNoValidate, i7.NgControlStatusGroup, i7.FormGroupDirective, i8.MatCard, i9.MatFormField, i10.MatInput, i7.DefaultValueAccessor, i11.MatDatepickerInput, i7.NgControlStatus, i7.FormControlName, i11.MatDatepickerToggle, i9.MatSuffix, i11.MatDatepicker, i6.NgIf, i9.MatError, i9.MatLabel, i12.MatButton, i3.RouterLink, i13.MatProgressSpinner],\n    pipes: [i6.DatePipe],\n    styles: [\".account-recover mat-card {\\n  margin-bottom: 20px;\\n}\\n.account-recover button {\\n  margin-right: 6px;\\n}\\n.account-recover .spinner-container {\\n  vertical-align: middle;\\n  display: inline-block;\\n}\"],\n    encapsulation: 2\n  });\n  return RecoverAccountComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}