{"ast":null,"code":"import _classCallCheck from \"D:\\\\Github\\\\Miladsoft\\\\blockcore-hub-1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"D:\\\\Github\\\\Miladsoft\\\\blockcore-hub-1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-electron\";\nimport * as i2 from \"../../services/authentication.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../services/logger.service\";\nimport * as i5 from \"../../services/api.service\";\nimport * as i6 from \"../../services/update.service\";\nimport * as i7 from \"../../services/application-state.service\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/button\";\n\nfunction AdvancedComponent_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function AdvancedComponent_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      var ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.openDataFolder();\n    });\n    i0.ɵɵelementStart(1, \"span\", 4);\n    i0.ɵɵtext(2, \"folder\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \" Open Wallet Folder\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AdvancedComponent_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function AdvancedComponent_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      var ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.resetDatabase();\n    });\n    i0.ɵɵelementStart(1, \"span\", 4);\n    i0.ɵɵtext(2, \"delete_forever\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \" Reset Blockchain Database\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AdvancedComponent_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function AdvancedComponent_button_17_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      var ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.updateService.downloadUpdate();\n    });\n    i0.ɵɵtext(1, \"Download Update\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r2.updateService.downloading);\n  }\n}\n\nfunction AdvancedComponent_button_19_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function AdvancedComponent_button_19_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      var ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.updateService.installUpdate();\n    });\n    i0.ɵɵtext(1, \"Install Update\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport var AdvancedComponent = /*#__PURE__*/(function () {\n  var AdvancedComponent = /*#__PURE__*/function () {\n    function AdvancedComponent(electronService, authService, router, zone, log, apiService, updateService, appState) {\n      _classCallCheck(this, AdvancedComponent);\n\n      this.electronService = electronService;\n      this.authService = authService;\n      this.router = router;\n      this.zone = zone;\n      this.log = log;\n      this.apiService = apiService;\n      this.updateService = updateService;\n      this.appState = appState;\n      this.hostClass = true;\n      this.hasWallet = false;\n      this.modes = [];\n      this.networks = [];\n      this.delayed = false;\n    }\n\n    _createClass(AdvancedComponent, [{\n      key: \"resetDatabase\",\n      value: function resetDatabase() {\n        // Send array of path information to be used in path.join to get native full path in the main process.\n        var pathInfo = [this.appState.daemon.datafolder, this.appState.activeChain.rootFolderName, this.appState.activeChain.network];\n        this.log.info('Reset Blockchain Database...', pathInfo);\n        var path = this.electronService.ipcRenderer.sendSync('reset-database', pathInfo);\n        this.log.info('Reset completed: ' + path);\n      }\n    }, {\n      key: \"openDataFolder\",\n      value: function openDataFolder() {\n        // Send array of path information to be used in path.join to get native full path in the main process.\n        var pathInfo = [this.appState.daemon.datafolder, this.appState.activeChain.rootFolderName, this.appState.activeChain.network];\n        this.log.info('Open Data Folder...', pathInfo);\n        var path = this.electronService.ipcRenderer.sendSync('open-data-folder', pathInfo);\n      }\n    }, {\n      key: \"checkForUpdate\",\n      value: function checkForUpdate() {\n        this.updateService.checkForUpdate();\n      }\n    }, {\n      key: \"initialize\",\n      value: function initialize() {}\n    }, {\n      key: \"cancel\",\n      value: function cancel() {\n        this.router.navigateByUrl('/');\n      }\n    }]);\n\n    return AdvancedComponent;\n  }();\n\n  AdvancedComponent.ɵfac = function AdvancedComponent_Factory(t) {\n    return new (t || AdvancedComponent)(i0.ɵɵdirectiveInject(i1.ElectronService), i0.ɵɵdirectiveInject(i2.AuthenticationService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i4.Logger), i0.ɵɵdirectiveInject(i5.ApiService), i0.ɵɵdirectiveInject(i6.UpdateService), i0.ɵɵdirectiveInject(i7.ApplicationStateService));\n  };\n\n  AdvancedComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdvancedComponent,\n    selectors: [[\"app-advanced\"]],\n    hostVars: 2,\n    hostBindings: function AdvancedComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"load\", ctx.hostClass);\n      }\n    },\n    decls: 23,\n    vars: 5,\n    consts: [[1, \"splash-container\", \"not-selectable\"], [1, \"paragraph-margin\"], [\"mat-stroked-button\", \"\", 3, \"click\", 4, \"ngIf\"], [\"mat-stroked-button\", \"\", 3, \"disabled\", \"click\"], [1, \"material-icons\"], [\"mat-stroked-button\", \"\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"routerLink\", \"/login\", \"mat-raised-button\", \"\", \"color\", \"primary\"], [\"mat-stroked-button\", \"\", 3, \"click\"]],\n    template: function AdvancedComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Advanced Tools\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"p\", 1);\n        i0.ɵɵtext(4, \"If you have problems, we have these tools to help investigate and fix potential issues that might occur.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"p\");\n        i0.ɵɵtemplate(6, AdvancedComponent_button_6_Template, 4, 0, \"button\", 2);\n        i0.ɵɵtext(7, \" \\xA0 \");\n        i0.ɵɵtemplate(8, AdvancedComponent_button_8_Template, 4, 0, \"button\", 2);\n        i0.ɵɵtext(9, \" \\xA0 \");\n        i0.ɵɵelement(10, \"br\")(11, \"br\");\n        i0.ɵɵelementStart(12, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function AdvancedComponent_Template_button_click_12_listener() {\n          return ctx.updateService.checkForUpdate();\n        });\n        i0.ɵɵelementStart(13, \"span\", 4);\n        i0.ɵɵtext(14, \"system_update\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(15, \" Check for Update\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(16, \" \\xA0 \");\n        i0.ɵɵtemplate(17, AdvancedComponent_button_17_Template, 2, 1, \"button\", 5);\n        i0.ɵɵtext(18, \" \\xA0 \");\n        i0.ɵɵtemplate(19, AdvancedComponent_button_19_Template, 2, 0, \"button\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"p\")(21, \"button\", 6);\n        i0.ɵɵtext(22, \"Go back\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", !ctx.appState.isSimpleMode);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.appState.isSimpleMode);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", ctx.updateService.downloading);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.updateService.available);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.updateService.downloaded);\n      }\n    },\n    directives: [i8.NgIf, i9.MatButton, i3.RouterLink],\n    styles: [\".paragraph-margin {\\n  padding-left: 30px;\\n  padding-right: 30px;\\n}\"],\n    encapsulation: 2\n  });\n  return AdvancedComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}