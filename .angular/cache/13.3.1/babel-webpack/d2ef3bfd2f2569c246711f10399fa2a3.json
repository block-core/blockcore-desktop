{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class AuthenticationService {\n  static singletonInstance;\n  isAuthenticatedSubject = new BehaviorSubject(this.hasAuthenticated());\n  authenticated = false;\n\n  constructor() {\n    if (!AuthenticationService.singletonInstance) {\n      AuthenticationService.singletonInstance = this;\n    }\n\n    return AuthenticationService.singletonInstance;\n  }\n\n  isAuthenticated() {\n    return this.isAuthenticatedSubject.asObservable();\n  }\n\n  setAuthenticated() {\n    this.authenticated = true;\n    this.isAuthenticatedSubject.next(this.authenticated);\n  }\n\n  setAnonymous() {\n    this.authenticated = false;\n    this.isAuthenticatedSubject.next(this.authenticated);\n  }\n\n  hasAuthenticated() {\n    return this.authenticated;\n  }\n\n  static ɵfac = function AuthenticationService_Factory(t) {\n    return new (t || AuthenticationService)();\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthenticationService,\n    factory: AuthenticationService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":null,"metadata":{},"sourceType":"module"}