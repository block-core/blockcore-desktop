{"ast":null,"code":"import _classCallCheck from \"D:\\\\Github\\\\Miladsoft\\\\blockcore-hub-1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"D:\\\\Github\\\\Miladsoft\\\\blockcore-hub-1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { WalletInfo } from 'src/app/classes/wallet-info';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/snack-bar\";\nimport * as i2 from \"src/app/services/wallet.service\";\nimport * as i3 from \"src/app/services/notification.service\";\nimport * as i4 from \"src/app/services/global.service\";\nimport * as i5 from \"src/app/services/api.service\";\nimport * as i6 from \"@angular/material/tabs\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/cdk/clipboard\";\nimport * as i9 from \"@angular/material/icon\";\nimport * as i10 from \"@angular/common\";\nimport * as i11 from \"@angular/router\";\n\nfunction ToolsComponent_p_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \" Transaction history cleared and syncing your wallet from the date of creation. You can see the status by clicking the top right \");\n    i0.ɵɵelementStart(2, \"a\", 9);\n    i0.ɵɵtext(3, \"network status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" icon. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport var ToolsComponent = /*#__PURE__*/(function () {\n  var ToolsComponent = /*#__PURE__*/function () {\n    function ToolsComponent(snackBar, wallet, notifications, globalService, apiService) {\n      _classCallCheck(this, ToolsComponent);\n\n      this.snackBar = snackBar;\n      this.wallet = wallet;\n      this.notifications = notifications;\n      this.globalService = globalService;\n      this.apiService = apiService;\n      this.hostClass = true;\n      this.resyncTriggered = false;\n    }\n\n    _createClass(ToolsComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var walletInfo = new WalletInfo(this.globalService.getWalletName());\n        this.getExtPubKey(walletInfo);\n      }\n    }, {\n      key: \"resync\",\n      value: function resync() {\n        this.wallet.resync();\n        this.resyncTriggered = true;\n        this.notifications.add({\n          title: 'Wallet Synchronization',\n          hint: 'Your wallet is updating its history',\n          message: 'You triggered the wallet re-sync option from the tools section. This will scan the blockchain for any transactions that are related to your wallet, and store that information in your history.<br><br>Your balance might show incorrect sum during this process.',\n          icon: 'info'\n        });\n      }\n    }, {\n      key: \"onCopiedClick\",\n      value: function onCopiedClick() {\n        this.snackBar.open('The extended public key has been copied to your clipboard.', null, {\n          duration: 3000\n        });\n        return false;\n      }\n    }, {\n      key: \"getExtPubKey\",\n      value: function getExtPubKey(walletInfo) {\n        var _this = this;\n\n        this.apiService.getExtPubkey(walletInfo).subscribe(function (response) {\n          _this.extPubKey = response;\n        }, function (error) {\n          _this.apiService.handleError(error);\n        });\n      }\n    }]);\n\n    return ToolsComponent;\n  }();\n\n  ToolsComponent.ɵfac = function ToolsComponent_Factory(t) {\n    return new (t || ToolsComponent)(i0.ɵɵdirectiveInject(i1.MatSnackBar), i0.ɵɵdirectiveInject(i2.WalletService), i0.ɵɵdirectiveInject(i3.NotificationService), i0.ɵɵdirectiveInject(i4.GlobalService), i0.ɵɵdirectiveInject(i5.ApiService));\n  };\n\n  ToolsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ToolsComponent,\n    selectors: [[\"app-tools\"]],\n    hostVars: 2,\n    hostBindings: function ToolsComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"app-tools\", ctx.hostClass);\n      }\n    },\n    decls: 28,\n    vars: 4,\n    consts: [[\"mat-stretch-tabs\", \"\"], [\"label\", \"Extended Public Key\"], [1, \"tab-pane\", \"content\"], [\"mat-icon-button\", \"\", \"ngbTooltip\", \"Copy to clipboard\", 3, \"cdkCopyToClipboard\", \"click\"], [1, \"code-block\"], [\"label\", \"Resync\"], [1, \"mat-caption\"], [\"mat-flat-button\", \"\", \"color\", \"warn\", 3, \"disabled\", \"click\"], [4, \"ngIf\"], [\"routerLink\", \"/network\"]],\n    template: function ToolsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-tab-group\", 0)(1, \"mat-tab\", 1)(2, \"div\", 2)(3, \"p\");\n        i0.ɵɵtext(4, \"This is your wallets Extended Public Key. With this key, you can generate all used and all future addresses for your wallet. For your own privacy, do not share this key with anyone.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"p\");\n        i0.ɵɵtext(6, \"With this key, you or a computer system, can generate payment addresses for your wallet, without sharing the private key.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"p\")(8, \"strong\");\n        i0.ɵɵtext(9, \"Extended Public Key:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function ToolsComponent_Template_button_click_10_listener() {\n          return ctx.onCopiedClick();\n        });\n        i0.ɵɵelementStart(11, \"mat-icon\");\n        i0.ɵɵtext(12, \"content_copy\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"p\", 4);\n        i0.ɵɵtext(14);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"mat-tab\", 5)(16, \"div\", 2)(17, \"h1\");\n        i0.ɵɵtext(18, \"Resync\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"p\", 6);\n        i0.ɵɵtext(20, \"If you have issues with your wallet, these actions might help you\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"p\");\n        i0.ɵɵtext(22, \" Sometimes your wallet might be unable to update the correct state on all transactions. If you have performed a payment and it never become confirmed, it might simply be your local blockchain cache that is not up-to-date. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"p\")(24, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function ToolsComponent_Template_button_click_24_listener() {\n          return ctx.resync();\n        });\n        i0.ɵɵtext(25, \"Clear transactions history and resync\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(26, \"\\xA0 \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(27, ToolsComponent_p_27_Template, 5, 0, \"p\", 8);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"cdkCopyToClipboard\", ctx.extPubKey);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.extPubKey);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"disabled\", ctx.resyncTriggered);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.resyncTriggered);\n      }\n    },\n    directives: [i6.MatTabGroup, i6.MatTab, i7.MatButton, i8.CdkCopyToClipboard, i9.MatIcon, i10.NgIf, i11.RouterLinkWithHref],\n    styles: [\".app-tools .code-block{overflow-wrap:break-word;display:inline-block;width:100%}\\n\"],\n    encapsulation: 2\n  });\n  return ToolsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}