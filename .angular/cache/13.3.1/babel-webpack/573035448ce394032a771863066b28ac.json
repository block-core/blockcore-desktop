{"ast":null,"code":"import _classCallCheck from \"D:\\\\Github\\\\Miladsoft\\\\blockcore-hub-1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"D:\\\\Github\\\\Miladsoft\\\\blockcore-hub-1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/theming.service\";\nimport * as i2 from \"ngx-electron\";\nimport * as i3 from \"src/app/services/settings.service\";\nimport * as i4 from \"src/app/services/application-state.service\";\nimport * as i5 from \"src/app/services/hub.service\";\nimport * as i6 from \"../../shared/app-modes\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"@angular/material/radio\";\nimport * as i10 from \"@angular/forms\";\nimport * as i11 from \"@angular/material/form-field\";\nimport * as i12 from \"@angular/material/select\";\nimport * as i13 from \"@angular/common\";\nimport * as i14 from \"@angular/material/core\";\nimport * as i15 from \"@angular/material/checkbox\";\nimport * as i16 from \"@angular/material/button\";\nimport * as i17 from \"@angular/router\";\n\nfunction SettingsComponent_mat_option_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var mode_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", mode_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", mode_r4.name, \" \");\n  }\n}\n\nfunction SettingsComponent_mat_card_31_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var hub_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", hub_r6.content.identifier);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", hub_r6.content.name, \" \");\n  }\n}\n\nvar _c0 = function _c0() {\n  return [\"./hubs\"];\n};\n\nfunction SettingsComponent_mat_card_31_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-card\", 1)(1, \"mat-card-header\")(2, \"mat-icon\", 2);\n    i0.ɵɵtext(3, \"device_hub\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-card-title\");\n    i0.ɵɵtext(5, \"Smart City Platform\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-card-subtitle\");\n    i0.ɵɵtext(7, \"Settings for the Smart City Platform integration.\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"mat-card-content\")(9, \"h3\", 3);\n    i0.ɵɵtext(10, \"Active Hub\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"mat-form-field\")(12, \"mat-select\", 7);\n    i0.ɵɵlistener(\"selectionChange\", function SettingsComponent_mat_card_31_Template_mat_select_selectionChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      var ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.onChanged($event);\n    })(\"ngModelChange\", function SettingsComponent_mat_card_31_Template_mat_select_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      var ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.selectedHub = $event;\n    });\n    i0.ɵɵtemplate(13, SettingsComponent_mat_card_31_mat_option_13_Template, 2, 2, \"mat-option\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(14, \"br\");\n    i0.ɵɵelementStart(15, \"p\")(16, \"button\", 11);\n    i0.ɵɵtext(17, \"Edit Hubs\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"p\")(19, \"em\");\n    i0.ɵɵtext(20, \"You need at minimum one registered hub to use features such as identity and data storage.\");\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.selectedHub);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.hubs);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c0));\n  }\n}\n\nfunction SettingsComponent_mat_card_32_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var addressType_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", addressType_r11);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", addressType_r11, \" \");\n  }\n}\n\nfunction SettingsComponent_mat_card_32_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-card\", 1)(1, \"mat-card-header\")(2, \"mat-icon\", 2);\n    i0.ɵɵtext(3, \"account_balance_wallet\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-card-title\");\n    i0.ɵɵtext(5, \"Wallet Options\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-card-subtitle\");\n    i0.ɵɵtext(7, \"Settings that applies to your wallet.\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"mat-card-content\")(9, \"h3\", 3);\n    i0.ɵɵtext(10, \"Address Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"mat-form-field\")(12, \"mat-select\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function SettingsComponent_mat_card_32_Template_mat_select_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      var ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.appState.addressType = $event;\n    });\n    i0.ɵɵtemplate(13, SettingsComponent_mat_card_32_mat_option_13_Template, 2, 2, \"mat-option\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"h3\", 3);\n    i0.ɵɵtext(15, \"Wallet Mode\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"mat-radio-group\", 4);\n    i0.ɵɵlistener(\"change\", function SettingsComponent_mat_card_32_Template_mat_radio_group_change_16_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      var ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.onChanged($event);\n    })(\"ngModelChange\", function SettingsComponent_mat_card_32_Template_mat_radio_group_ngModelChange_16_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      var ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.selectedWalletMode = $event;\n    });\n    i0.ɵɵelementStart(17, \"mat-radio-button\", 13);\n    i0.ɵɵtext(18, \"Multi-Address-Mode\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(19, \"br\");\n    i0.ɵɵelementStart(20, \"mat-radio-button\", 14);\n    i0.ɵɵtext(21, \"Single-Address-Mode\");\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.appState.addressType);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.appState.addressTypes);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.selectedWalletMode);\n  }\n}\n\nfunction SettingsComponent_mat_card_33_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-card\", 1)(1, \"mat-card-header\")(2, \"mat-icon\", 2);\n    i0.ɵɵtext(3, \"adb\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-card-title\");\n    i0.ɵɵtext(5, \"Debug Settings\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-card-subtitle\");\n    i0.ɵɵtext(7, \"Allows you to enable debug options\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"mat-card-content\")(9, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function SettingsComponent_mat_card_33_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r17);\n      var ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.openDevTools();\n    });\n    i0.ɵɵtext(10, \"Open Developer Tools\");\n    i0.ɵɵelementEnd()()();\n  }\n}\n\nexport var SettingsComponent = /*#__PURE__*/(function () {\n  var SettingsComponent = /*#__PURE__*/function () {\n    function SettingsComponent(theme, electronService, electron, settings, appState, hubService, appModes) {\n      _classCallCheck(this, SettingsComponent);\n\n      this.theme = theme;\n      this.electronService = electronService;\n      this.electron = electron;\n      this.settings = settings;\n      this.appState = appState;\n      this.hubService = hubService;\n      this.appModes = appModes;\n      this.hostClass = true;\n      this.addressTypes = ['Legacy', 'Segwit'];\n      this.selectedTheme = theme.currentTheme;\n      this.selectedAutoLock = settings.autoLock;\n      this.selectedClearOnExit = settings.clearOnExit;\n      this.selectedWalletMode = settings.walletMode;\n      this.selectedMode = settings.mode;\n      this.selectedShowInTaskbar = settings.showInTaskbar;\n      this.selectedOpenOnLogin = settings.openOnLogin;\n      this.selectedHub = settings.hub;\n      this.hubs = settings.hubs;\n    }\n\n    _createClass(SettingsComponent, [{\n      key: \"onThemeChange\",\n      value: function onThemeChange(event) {\n        this.theme.toggle();\n      }\n    }, {\n      key: \"openDevTools\",\n      value: function openDevTools() {\n        this.electronService.ipcRenderer.sendSync('open-dev-tools'); // const win = new BrowserWindow();\n        // win.webContents.openDevTools();\n      }\n    }, {\n      key: \"onChanged\",\n      value: function onChanged(event) {\n        this.appModes.activate(this.selectedMode);\n        this.settings.mode = this.selectedMode;\n        this.settings.walletMode = this.selectedWalletMode;\n        this.settings.language = this.selectedLanguage;\n        this.settings.currency = this.selectedCurrency;\n        this.settings.showInTaskbar = this.selectedShowInTaskbar;\n        this.settings.openOnLogin = this.selectedOpenOnLogin;\n        this.settings.autoLock = this.selectedAutoLock;\n        this.settings.clearOnExit = this.selectedClearOnExit;\n        this.settings.hub = this.selectedHub;\n        console.log('selectedOpenOnLogin:', this.selectedOpenOnLogin);\n        this.electron.ipcRenderer.send('settings', {\n          openAtLogin: this.settings.openOnLogin,\n          showInTaskbar: this.settings.showInTaskbar\n        });\n      }\n    }]);\n\n    return SettingsComponent;\n  }();\n\n  SettingsComponent.ɵfac = function SettingsComponent_Factory(t) {\n    return new (t || SettingsComponent)(i0.ɵɵdirectiveInject(i1.Theming), i0.ɵɵdirectiveInject(i2.ElectronService), i0.ɵɵdirectiveInject(i2.ElectronService), i0.ɵɵdirectiveInject(i3.SettingsService), i0.ɵɵdirectiveInject(i4.ApplicationStateService), i0.ɵɵdirectiveInject(i5.HubService), i0.ɵɵdirectiveInject(i6.AppModes));\n  };\n\n  SettingsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SettingsComponent,\n    selectors: [[\"app-settings\"]],\n    hostVars: 2,\n    hostBindings: function SettingsComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"settings\", ctx.hostClass);\n      }\n    },\n    decls: 34,\n    vars: 8,\n    consts: [[1, \"content\"], [1, \"settings-card\"], [\"mat-card-avatar\", \"\"], [1, \"mat-h3\"], [3, \"ngModel\", \"change\", \"ngModelChange\"], [\"value\", \"app-dark-theme\"], [\"value\", \"app-light-theme\"], [3, \"ngModel\", \"selectionChange\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"settings-card\", 4, \"ngIf\"], [3, \"value\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"routerLink\"], [3, \"ngModel\", \"ngModelChange\"], [\"value\", \"multi\"], [\"value\", \"single\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n    template: function SettingsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-card\", 1)(2, \"mat-card-header\")(3, \"mat-icon\", 2);\n        i0.ɵɵtext(4, \"mood\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-card-title\");\n        i0.ɵɵtext(6, \"User Experience\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mat-card-subtitle\");\n        i0.ɵɵtext(8, \"Settings to customize user experience.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"mat-card-content\")(10, \"h3\", 3);\n        i0.ɵɵtext(11, \"Theme\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"mat-radio-group\", 4);\n        i0.ɵɵlistener(\"change\", function SettingsComponent_Template_mat_radio_group_change_12_listener($event) {\n          return ctx.onThemeChange($event);\n        })(\"ngModelChange\", function SettingsComponent_Template_mat_radio_group_ngModelChange_12_listener($event) {\n          return ctx.selectedTheme = $event;\n        });\n        i0.ɵɵelementStart(13, \"mat-radio-button\", 5);\n        i0.ɵɵtext(14, \"Dark theme\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"br\");\n        i0.ɵɵelementStart(16, \"mat-radio-button\", 6);\n        i0.ɵɵtext(17, \"Light theme\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"h3\", 3);\n        i0.ɵɵtext(19, \"Mode\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"mat-form-field\")(21, \"mat-select\", 7);\n        i0.ɵɵlistener(\"selectionChange\", function SettingsComponent_Template_mat_select_selectionChange_21_listener($event) {\n          return ctx.onChanged($event);\n        })(\"ngModelChange\", function SettingsComponent_Template_mat_select_ngModelChange_21_listener($event) {\n          return ctx.selectedMode = $event;\n        });\n        i0.ɵɵtemplate(22, SettingsComponent_mat_option_22_Template, 2, 2, \"mat-option\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"h3\", 3);\n        i0.ɵɵtext(24, \"Minimized Window Mode\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"mat-checkbox\", 4);\n        i0.ɵɵlistener(\"change\", function SettingsComponent_Template_mat_checkbox_change_25_listener($event) {\n          return ctx.onChanged($event);\n        })(\"ngModelChange\", function SettingsComponent_Template_mat_checkbox_ngModelChange_25_listener($event) {\n          return ctx.selectedShowInTaskbar = $event;\n        });\n        i0.ɵɵtext(26, \"Show in taskbar when minimized\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"h3\", 3);\n        i0.ɵɵtext(28, \"Autostart on log in\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"mat-checkbox\", 4);\n        i0.ɵɵlistener(\"change\", function SettingsComponent_Template_mat_checkbox_change_29_listener($event) {\n          return ctx.onChanged($event);\n        })(\"ngModelChange\", function SettingsComponent_Template_mat_checkbox_ngModelChange_29_listener($event) {\n          return ctx.selectedOpenOnLogin = $event;\n        });\n        i0.ɵɵtext(30, \"Start Blockcore Hub when you log in to your computer\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(31, SettingsComponent_mat_card_31_Template, 21, 4, \"mat-card\", 9);\n        i0.ɵɵtemplate(32, SettingsComponent_mat_card_32_Template, 22, 3, \"mat-card\", 9);\n        i0.ɵɵtemplate(33, SettingsComponent_mat_card_33_Template, 11, 0, \"mat-card\", 9);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedTheme);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedMode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.appModes.available);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedShowInTaskbar);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedOpenOnLogin);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.appModes.enabled(\"hubs\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.appModes.enabled(\"walletmode\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.appModes.enabled(\"debug\"));\n      }\n    },\n    directives: [i7.MatCard, i7.MatCardHeader, i8.MatIcon, i7.MatCardAvatar, i7.MatCardTitle, i7.MatCardSubtitle, i7.MatCardContent, i9.MatRadioGroup, i10.NgControlStatus, i10.NgModel, i9.MatRadioButton, i11.MatFormField, i12.MatSelect, i13.NgForOf, i14.MatOption, i15.MatCheckbox, i13.NgIf, i16.MatButton, i17.RouterLink],\n    styles: [\".settings .settings-card{max-width:400px;margin-bottom:30px;margin-left:auto;margin-right:auto}.settings .settings-card .mat-card-avatar{font-size:3em;width:40px;height:40px;margin-right:12px}.settings .settings-card h3{margin-bottom:10px;margin-top:20px}.settings .settings-card mat-radio-button{margin-bottom:10px}.settings .settings-row{display:flex;flex-direction:row;margin-bottom:10px}.settings .settings-row>:nth-child(1){min-width:140px}\\n\"],\n    encapsulation: 2\n  });\n  return SettingsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}