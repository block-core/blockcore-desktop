{"ast":null,"code":"import _classCallCheck from \"D:\\\\Github\\\\Miladsoft\\\\blockcore-hub-1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"D:\\\\Github\\\\Miladsoft\\\\blockcore-hub-1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { InjectionToken } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter, map, mergeMap } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\nimport { BehaviorSubject } from 'rxjs';\nimport { SetupService } from './setup.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./setup.service\";\nexport var APP_TITLE = new InjectionToken('App Title Postfix');\nexport var TitleService = /*#__PURE__*/(function () {\n  var TitleService = /*#__PURE__*/function () {\n    function TitleService(router, setup, document, appTitle) {\n      _classCallCheck(this, TitleService);\n\n      this.router = router;\n      this.setup = setup;\n      this.document = document;\n      this.appTitle = appTitle;\n      this.title = new BehaviorSubject(this.document.title);\n\n      if (!TitleService.singletonInstance) {\n        this.initialize();\n        TitleService.singletonInstance = this;\n      }\n\n      return TitleService.singletonInstance;\n    }\n\n    _createClass(TitleService, [{\n      key: \"$title\",\n      get: function get() {\n        return this.title.asObservable();\n      }\n    }, {\n      key: \"initialize\",\n      value: function initialize() {\n        var _this = this;\n\n        this.router.events.pipe(filter(function (event) {\n          return event instanceof NavigationEnd;\n        }), map(function () {\n          return _this.router.routerState.root;\n        }), map(function (route) {\n          while (route.firstChild) {\n            route = route.firstChild;\n          }\n\n          return route;\n        }), filter(function (route) {\n          return route.outlet === 'primary';\n        }), mergeMap(function (route) {\n          return route.data;\n        }), // eslint-disable-next-line @typescript-eslint/dot-notation\n        map(function (data) {\n          return {\n            title: data['title'],\n            prefix: data['prefix']\n          };\n        })).subscribe(function (title) {\n          var formattedTitle = title.title != null ? title.title : '';\n\n          if (title.prefix != null) {\n            formattedTitle = title.prefix + ' - ' + formattedTitle;\n          } // For the document title, we'll append the app title.\n          // if (this.appTitle != null) {\n          // this.document.title = formattedTitle + ' - ' + this.appTitle;\n\n\n          _this.document.title = _this.setup.name + ' - ' + formattedTitle; // }\n\n          _this.title.next(formattedTitle);\n        });\n      }\n    }]);\n\n    return TitleService;\n  }();\n\n  /** @nocollapse */\n  TitleService.ɵfac = function TitleService_Factory(t) {\n    return new (t || TitleService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.SetupService), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(APP_TITLE, 8));\n  };\n  /** @nocollapse */\n\n\n  TitleService.ɵprov =\n  /** @pureOrBreakMyCode */\n  i0.ɵɵdefineInjectable({\n    token: TitleService,\n    factory: TitleService.ɵfac,\n    providedIn: 'root'\n  });\n  return TitleService;\n})();","map":null,"metadata":{},"sourceType":"module"}