{"ast":null,"code":"import _inherits from \"D:\\\\Github\\\\Miladsoft\\\\blockcore-hub-1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\nimport _createSuper from \"D:\\\\Github\\\\Miladsoft\\\\blockcore-hub-1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createSuper.js\";\nimport _classCallCheck from \"D:\\\\Github\\\\Miladsoft\\\\blockcore-hub-1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"D:\\\\Github\\\\Miladsoft\\\\blockcore-hub-1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { Injectable, NgModule } from '@angular/core';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\n\nvar ElectronService = /*#__PURE__*/function () {\n  function ElectronService() {\n    _classCallCheck(this, ElectronService);\n  }\n\n  _createClass(ElectronService, [{\n    key: \"electron\",\n    get:\n    /**\n     * @private\n     * @return {?}\n     */\n    function get() {\n      if (!this._electron) {\n        if (window && window.require) {\n          this._electron = window.require('electron');\n          return this._electron;\n        }\n\n        return null;\n      }\n\n      return this._electron;\n    }\n    /**\n     * determines if SPA is running in Electron\n     * @return {?}\n     */\n\n  }, {\n    key: \"isElectronApp\",\n    get: function get() {\n      return !!window.navigator.userAgent.match(/Electron/);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"isMacOS\",\n    get: function get() {\n      return this.isElectronApp && process.platform === 'darwin';\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"isWindows\",\n    get: function get() {\n      return this.isElectronApp && process.platform === 'win32';\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"isLinux\",\n    get: function get() {\n      return this.isElectronApp && process.platform === 'linux';\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"isX86\",\n    get: function get() {\n      return this.isElectronApp && process.arch === 'ia32';\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"isX64\",\n    get: function get() {\n      return this.isElectronApp && process.arch === 'x64';\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"isArm\",\n    get: function get() {\n      return this.isElectronApp && process.arch === 'arm';\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"desktopCapturer\",\n    get: function get() {\n      return this.electron ? this.electron.desktopCapturer : null;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ipcRenderer\",\n    get: function get() {\n      return this.electron ? this.electron.ipcRenderer : null;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"remote\",\n    get: function get() {\n      return this.electron ? this.electron.remote : null;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"webFrame\",\n    get: function get() {\n      return this.electron ? this.electron.webFrame : null;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"clipboard\",\n    get: function get() {\n      return this.electron ? this.electron.clipboard : null;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"crashReporter\",\n    get: function get() {\n      return this.electron ? this.electron.crashReporter : null;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"process\",\n    get: function get() {\n      return this.remote ? this.remote.process : null;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"nativeImage\",\n    get: function get() {\n      return this.electron ? this.electron.nativeImage : null;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"screen\",\n    get: function get() {\n      return this.electron ? this.remote.screen : null;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"shell\",\n    get: function get() {\n      return this.electron ? this.electron.shell : null;\n    }\n  }]);\n\n  return ElectronService;\n}();\n\nif (false) {\n  /**\n   * @type {?}\n   * @private\n   */\n  ElectronService.prototype._electron;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar ElectronServiceRef = /*#__PURE__*/(function () {\n  var ElectronServiceRef = /*#__PURE__*/function (_ElectronService) {\n    _inherits(ElectronServiceRef, _ElectronService);\n\n    var _super = _createSuper(ElectronServiceRef);\n\n    function ElectronServiceRef() {\n      _classCallCheck(this, ElectronServiceRef);\n\n      return _super.call(this);\n    }\n\n    return _createClass(ElectronServiceRef);\n  }(ElectronService);\n\n  /** @nocollapse */\n  ElectronServiceRef.ɵfac = function ElectronServiceRef_Factory(t) {\n    return new (t || ElectronServiceRef)();\n  };\n  /** @nocollapse */\n\n\n  ElectronServiceRef.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: ElectronServiceRef,\n    factory: ElectronServiceRef.ɵfac\n  });\n  /** @nocollapse */\n\n  return ElectronServiceRef;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar NgxElectronModule = /*#__PURE__*/(function () {\n  var NgxElectronModule = /*#__PURE__*/_createClass(function NgxElectronModule() {\n    _classCallCheck(this, NgxElectronModule);\n  });\n\n  /** @nocollapse */\n  NgxElectronModule.ɵfac = function NgxElectronModule_Factory(t) {\n    return new (t || NgxElectronModule)();\n  };\n  /** @nocollapse */\n\n\n  NgxElectronModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NgxElectronModule\n  });\n  /** @nocollapse */\n\n  NgxElectronModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    providers: [{\n      provide: ElectronService,\n      useClass: ElectronServiceRef\n    }]\n  });\n  return NgxElectronModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { ElectronService, ElectronServiceRef, NgxElectronModule }; //# sourceMappingURL=ngx-electron.js.map","map":null,"metadata":{},"sourceType":"module"}