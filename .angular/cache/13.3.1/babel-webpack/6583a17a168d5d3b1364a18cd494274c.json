{"ast":null,"code":"import { ReplaySubject } from '../ReplaySubject';\nimport { share } from './share';\nexport function shareReplay(configOrBufferSize, windowTime, scheduler) {\n  var bufferSize;\n  var refCount = false;\n\n  if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n    var _configOrBufferSize$b = configOrBufferSize.bufferSize;\n    bufferSize = _configOrBufferSize$b === void 0 ? Infinity : _configOrBufferSize$b;\n    var _configOrBufferSize$w = configOrBufferSize.windowTime;\n    windowTime = _configOrBufferSize$w === void 0 ? Infinity : _configOrBufferSize$w;\n    var _configOrBufferSize$r = configOrBufferSize.refCount;\n    refCount = _configOrBufferSize$r === void 0 ? false : _configOrBufferSize$r;\n    scheduler = configOrBufferSize.scheduler;\n  } else {\n    bufferSize = configOrBufferSize !== null && configOrBufferSize !== void 0 ? configOrBufferSize : Infinity;\n  }\n\n  return share({\n    connector: function connector() {\n      return new ReplaySubject(bufferSize, windowTime, scheduler);\n    },\n    resetOnError: true,\n    resetOnComplete: false,\n    resetOnRefCountZero: refCount\n  });\n} //# sourceMappingURL=shareReplay.js.map","map":null,"metadata":{},"sourceType":"module"}