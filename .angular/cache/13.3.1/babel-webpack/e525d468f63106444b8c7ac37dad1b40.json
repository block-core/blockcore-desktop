{"ast":null,"code":"import _classCallCheck from \"D:\\\\Github\\\\Miladsoft\\\\blockcore-hub-1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"D:\\\\Github\\\\Miladsoft\\\\blockcore-hub-1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { ApplicationStateService } from '../../../services/application-state.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/application-state.service\";\nimport * as i2 from \"@angular/common\";\n\nfunction ChangesComponent_h1_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, ctx_r0.appState.appTitle$));\n  }\n}\n\nexport var ChangesComponent = /*#__PURE__*/(function () {\n  var ChangesComponent = /*#__PURE__*/function () {\n    function ChangesComponent(appState) {\n      _classCallCheck(this, ChangesComponent);\n\n      this.appState = appState;\n      this.hostClass = true;\n      this.appState.pageMode = true;\n    }\n\n    _createClass(ChangesComponent, [{\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.appState.pageMode = false;\n      }\n    }]);\n\n    return ChangesComponent;\n  }();\n\n  /** @nocollapse */\n  ChangesComponent.ɵfac = function ChangesComponent_Factory(t) {\n    return new (t || ChangesComponent)(i0.ɵɵdirectiveInject(i1.ApplicationStateService));\n  };\n  /** @nocollapse */\n\n\n  ChangesComponent.ɵcmp =\n  /** @pureOrBreakMyCode */\n  i0.ɵɵdefineComponent({\n    type: ChangesComponent,\n    selectors: [[\"app-changes\"]],\n    hostVars: 2,\n    hostBindings: function ChangesComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"changes\", ctx.hostClass);\n      }\n    },\n    decls: 34,\n    vars: 1,\n    consts: [[1, \"content\"], [\"class\", \"mat-h1\", 4, \"ngIf\"], [1, \"mat-h3\"], [1, \"mat-h1\"]],\n    template: function ChangesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtext(1, \"\\n    \");\n        i0.ɵɵtemplate(2, ChangesComponent_h1_2_Template, 3, 3, \"h1\", 1);\n        i0.ɵɵtext(3, \"\\n\\n    \");\n        i0.ɵɵelementStart(4, \"h3\", 2);\n        i0.ɵɵtext(5, \"March, 2021 (v1.0.0)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(6, \"\\n\\n    \");\n        i0.ɵɵelementStart(7, \"ul\");\n        i0.ɵɵtext(8, \"\\n        \");\n        i0.ɵɵelementStart(9, \"li\");\n        i0.ɵɵtext(10, \"Add support for multiple chains.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(11, \"\\n        \");\n        i0.ɵɵelementStart(12, \"li\");\n        i0.ɵɵtext(13, \"Add dedicated staking feature.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(14, \"\\n        \");\n        i0.ɵɵelementStart(15, \"li\");\n        i0.ɵɵtext(16, \"Improves the loading progress screen.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(17, \"\\n        \");\n        i0.ɵɵelementStart(18, \"li\");\n        i0.ɵɵtext(19, \"Improvements to advanced features.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(20, \"\\n        \");\n        i0.ɵɵelementStart(21, \"li\");\n        i0.ɵɵtext(22, \"Add switch between Legacy and Segwit address types.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(23, \"\\n        \");\n        i0.ɵɵelementStart(24, \"li\");\n        i0.ɵɵtext(25, \"Add feature for signing and verifying messages.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(26, \"\\n    \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(27, \"\\n\\n    \");\n        i0.ɵɵelement(28, \"br\");\n        i0.ɵɵtext(29, \"\\n    \");\n        i0.ɵɵelementStart(30, \"em\");\n        i0.ɵɵtext(31, \"Preview release change history was purged. Please refer to City Hub to see previous release history.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(32, \"\\n\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(33, \"\\n\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.appState.handset);\n      }\n    },\n    directives: [i2.NgIf],\n    pipes: [i2.AsyncPipe],\n    styles: [\"a {\\n  color: white;\\n  text-decoration: none;\\n}\\n\\na:hover {\\n  text-decoration: underline;\\n}\"],\n    encapsulation: 2\n  });\n  return ChangesComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}