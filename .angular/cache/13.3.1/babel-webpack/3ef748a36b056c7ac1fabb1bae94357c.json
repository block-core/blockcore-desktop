{"ast":null,"code":"import _classCallCheck from \"D:\\\\Github\\\\Miladsoft\\\\blockcore-hub-1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"D:\\\\Github\\\\Miladsoft\\\\blockcore-hub-1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _regeneratorRuntime from \"D:\\\\Github\\\\Miladsoft\\\\blockcore-hub-1\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar _a, _b, _c, _d, _e, _f;\n\nimport { Component, ViewEncapsulation, HostBinding, ChangeDetectorRef } from '@angular/core';\nimport { ApplicationStateService } from '../../services/application-state.service';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { IdentityService } from 'src/app/services/identity.service';\nimport { ProfileImageService } from 'src/app/services/profile-image.service';\nimport { ApiService } from 'src/app/services/api.service';\nimport { WalletService } from 'src/app/services/wallet.service';\nimport { ElectronService } from 'ngx-electron';\nimport { Logger } from 'src/app/services/logger.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nvar IdentityComponent = /*#__PURE__*/function () {\n  function IdentityComponent(appState, identityService, profileImageService, apiService, log, snackBar, electronService, walletService, cd, settings) {\n    _classCallCheck(this, IdentityComponent);\n\n    this.appState = appState;\n    this.identityService = identityService;\n    this.profileImageService = profileImageService;\n    this.apiService = apiService;\n    this.log = log;\n    this.snackBar = snackBar;\n    this.electronService = electronService;\n    this.walletService = walletService;\n    this.cd = cd;\n    this.settings = settings;\n    this.hostClass = true;\n    this.scanning = false;\n    this.scanningDeep = false;\n    this.searchInput = '';\n    this.showDeleted = false;\n    this.filter = '';\n    this.appState.pageMode = false;\n  }\n\n  _createClass(IdentityComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {}\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {}\n  }, {\n    key: \"onCopiedClick\",\n    value: function onCopiedClick() {\n      this.snackBar.open('Identity identifier has been copied to your clipboard.', null, {\n        duration: 3000\n      });\n      return false;\n    } // async scan() {\n    //     const icons = ['https://image.flaticon.com/icons/svg/236/236832.svg',\n    //         'https://image.flaticon.com/icons/svg/236/236832.svg',\n    //         'https://image.flaticon.com/icons/svg/236/236832.svg',\n    //         'https://image.flaticon.com/icons/svg/236/236832.svg',\n    //         'https://image.flaticon.com/icons/svg/236/236831.svg',\n    //         'https://image.flaticon.com/icons/svg/236/236800.svg',\n    //         'https://image.flaticon.com/icons/svg/236/236810.svg',\n    //         'https://image.flaticon.com/icons/svg/236/236806.svg',\n    //         'https://image.flaticon.com/icons/svg/236/236846.svg',\n    //         'https://image.flaticon.com/icons/svg/236/236818.svg',\n    //         'https://image.flaticon.com/icons/svg/236/236808.svg',\n    //         'https://image.flaticon.com/icons/svg/236/236804.svg',\n    //         'https://image.flaticon.com/icons/svg/234/234679.svg',\n    //         'https://image.flaticon.com/icons/svg/424/424783.svg',\n    //         'https://image.flaticon.com/icons/svg/236/236849.svg',\n    //         'https://image.flaticon.com/icons/svg/236/236801.svg',\n    //         'https://image.flaticon.com/icons/svg/236/236829.svg',\n    //         'https://image.flaticon.com/icons/svg/233/233914.svg',\n    //         'https://image.flaticon.com/icons/svg/233/233954.svg',\n    //         'https://image.flaticon.com/icons/svg/424/424796.svg',\n    //         'https://image.flaticon.com/icons/svg/233/233958.svg',\n    //         'https://image.flaticon.com/icons/svg/233/233922.svg',\n    //         'https://image.flaticon.com/icons/svg/233/233950.svg',\n    //         'https://image.flaticon.com/icons/svg/424/424779.svg',\n    //         'https://image.flaticon.com/icons/svg/233/233927.svg',\n    //         'https://image.flaticon.com/icons/svg/233/233878.svg',\n    //         'https://image.flaticon.com/icons/svg/233/233938.svg',\n    //         'https://image.flaticon.com/icons/svg/233/233894.svg',\n    //         'https://image.flaticon.com/icons/svg/233/233949.svg',\n    //         'https://image.flaticon.com/icons/svg/233/233883.svg',\n    //         'https://image.flaticon.com/icons/svg/233/233893.svg',\n    //         'https://image.flaticon.com/icons/svg/424/424763.svg',\n    //         'https://image.flaticon.com/icons/svg/234/234588.svg',\n    //         'https://image.flaticon.com/icons/svg/234/234724.svg',\n    //         'https://image.flaticon.com/icons/svg/236/236808.svg',\n    //         'https://image.flaticon.com/icons/svg/234/234668.svg',\n    //         'https://image.flaticon.com/icons/svg/234/234829.svg',\n    //         'https://image.flaticon.com/icons/svg/234/234794.svg',\n    //         'https://image.flaticon.com/icons/svg/234/234771.svg',\n    //         'https://image.flaticon.com/icons/svg/234/234736.svg',\n    //         'https://image.flaticon.com/icons/svg/234/234757.svg',\n    //         'https://image.flaticon.com/icons/svg/424/424788.svg',\n    //         'https://image.flaticon.com/icons/svg/306/306294.svg',\n    //         'https://image.flaticon.com/icons/svg/234/234248.svg',\n    //         'https://image.flaticon.com/icons/svg/314/314271.svg',\n    //         'https://image.flaticon.com/icons/svg/234/234213.svg',\n    //         'https://image.flaticon.com/icons/svg/234/234207.svg',\n    //         'https://image.flaticon.com/icons/svg/234/234214.svg',\n    //         'https://image.flaticon.com/icons/svg/2162/2162579.svg',\n    //         'https://image.flaticon.com/icons/svg/825/825540.svg',\n    //         'https://image.flaticon.com/icons/svg/825/825465.svg',\n    //         'https://image.flaticon.com/icons/svg/1870/1870449.svg',\n    //         'https://image.flaticon.com/icons/svg/234/234163.svg',\n    //         'https://image.flaticon.com/icons/svg/234/234121.svg'];\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    //     for (let i = 0; i < icons.length; ++i) {\n    //         const icon = icons[i];\n    //         const identityContainer = this.identityService.create();\n    //         identityContainer.content.image = icon;\n    //         identityContainer.publish = true;\n    //         identityContainer.published = true;\n    //         this.identityService.add(identityContainer);\n    //     }\n    // }\n\n  }, {\n    key: \"scan\",\n    value: function scan() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this = this;\n\n        var seek;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.scanning = true;\n                this.scanningStatus = 'Scanning identity index 0...';\n\n                seek = function seek() {\n                  return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                    var index, height, hasFound, length, identity;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            index = 0;\n                            height = 10;\n                            hasFound = false;\n                            length = 10; // With the deep scan we won't stop until we have done a full lengthy scan of identities.\n\n                          case 4:\n                            if (!(index < height)) {\n                              _context.next = 14;\n                              break;\n                            }\n\n                            _context.next = 7;\n                            return this.identityService.findByIndex(index);\n\n                          case 7:\n                            identity = _context.sent;\n\n                            // Every time we find an identity, extend the search range with 10 more.\n                            if (identity) {\n                              hasFound = true;\n                            }\n\n                            index++;\n                            this.scanningStatus = 'Scanning identity index ' + index + '...'; // When we are at last index, check if we found anything, if we did, extend with another 10 indexes to search.\n\n                            if (index === height && hasFound) {\n                              height = height + length;\n                              hasFound = false;\n                            }\n\n                            _context.next = 4;\n                            break;\n\n                          case 14:\n                            this.scanningStatus = '';\n                            this.scanning = false;\n\n                          case 16:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee, this);\n                  }));\n                };\n\n                setTimeout(seek, 0);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"scanDeep\",\n    value: function scanDeep() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var _this2 = this;\n\n        var seek;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.scanning = true;\n                this.scanningStatus = 'Scanning identity index 0...';\n\n                seek = function seek() {\n                  return __awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                    var index, height, hasFound, length, identity;\n                    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            index = 0;\n                            height = 100;\n                            hasFound = false;\n                            length = 100; // With the deep scan we won't stop until we have done a full lengthy scan of identities.\n\n                          case 4:\n                            if (!(index < height)) {\n                              _context3.next = 14;\n                              break;\n                            }\n\n                            _context3.next = 7;\n                            return this.identityService.findByIndex(index);\n\n                          case 7:\n                            identity = _context3.sent;\n\n                            // Every time we find an identity, extend the search range with 10 more.\n                            if (identity) {\n                              hasFound = true;\n                            }\n\n                            index++;\n                            this.scanningStatus = 'Scanning identity index ' + index + '...'; // When we are at last index, check if we found anything, if we did, extend with another 10 indexes to search.\n\n                            if (index === height && hasFound) {\n                              height = height + length;\n                              hasFound = false;\n                            }\n\n                            _context3.next = 4;\n                            break;\n\n                          case 14:\n                            this.scanningStatus = '';\n                            this.scanning = false;\n\n                          case 16:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3, this);\n                  }));\n                };\n\n                setTimeout(seek, 0);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(id) {\n      this.identityService.remove(id); // this.identities = this.settings.identities;\n\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"deleteAll\",\n    value: function deleteAll() {\n      this.identityService.identities = [];\n    }\n  }]);\n\n  return IdentityComponent;\n}();\n\n__decorate([HostBinding('class.identity'), __metadata(\"design:type\", Object)], IdentityComponent.prototype, \"hostClass\", void 0);\n\nIdentityComponent = __decorate([Component({\n  selector: 'app-identity',\n  templateUrl: './identity.component.html',\n  styleUrls: ['./identity.component.scss'],\n  encapsulation: ViewEncapsulation.None\n}), __metadata(\"design:paramtypes\", [ApplicationStateService, typeof (_a = typeof IdentityService !== \"undefined\" && IdentityService) === \"function\" ? _a : Object, typeof (_b = typeof ProfileImageService !== \"undefined\" && ProfileImageService) === \"function\" ? _b : Object, typeof (_c = typeof ApiService !== \"undefined\" && ApiService) === \"function\" ? _c : Object, typeof (_d = typeof Logger !== \"undefined\" && Logger) === \"function\" ? _d : Object, MatSnackBar, ElectronService, typeof (_e = typeof WalletService !== \"undefined\" && WalletService) === \"function\" ? _e : Object, ChangeDetectorRef, typeof (_f = typeof SettingsService !== \"undefined\" && SettingsService) === \"function\" ? _f : Object])], IdentityComponent);\nexport { IdentityComponent };","map":null,"metadata":{},"sourceType":"module"}