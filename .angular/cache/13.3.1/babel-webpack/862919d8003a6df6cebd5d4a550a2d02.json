{"ast":null,"code":"// export interface Identity {\n//     id: string;\n//     name: string;\n//     shortname: string;\n//     alias?: string;\n//     title?: string;\n//     email?: string;\n//     published: boolean;\n//     locked?: boolean;\n//     links?: Link[];\n//     time?: Date;\n//     height: number;\n//     signature?: string;\n//     restorekey?: string;\n// }\nexport class EntityBase {\n  identifier = null;\n  iat = null;\n  '@type' = null;\n  '@state' = 0;\n\n  constructor(type) {\n    this['@type'] = type;\n  }\n\n} // export class Signature {\n//     constructor(identity: string = null, value: string = null) {\n//         this.identity = identity;\n//         this.value = value;\n//     }\n//     type = 'sha256-ecdsa-secp256k1-v1';\n//     identity: string = null;\n//     value: string = null;\n// }\n\nexport class Identity extends EntityBase {\n  name = null;\n  shortname = null;\n  alias = null;\n  title = null;\n  email = null;\n  url = null;\n  image = null;\n  hubs = null;\n\n  constructor() {\n    super('identity');\n  }\n\n}\nexport class IdentityContainer {\n  version;\n  id;\n  header;\n  signature;\n  payload;\n  content; // Local custom values:\n\n  status;\n  added;\n  locked;\n  published;\n  publish;\n  index; // Make sure we don't publish this, we don't want to expose the user's identity indexes.\n\n  constructor(identity) {\n    this.id = 'did:is:' + identity.identifier;\n    this.content = identity;\n    this.version = 4;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}