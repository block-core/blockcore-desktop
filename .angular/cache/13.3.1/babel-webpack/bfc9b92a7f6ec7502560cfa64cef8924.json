{"ast":null,"code":"// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.\n\n/** Indicates the severity of a log message.\r\n *\r\n * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.\r\n */\nexport var LogLevel = /*#__PURE__*/(function () {\n  (function (LogLevel) {\n    /** Log level for very low severity diagnostic messages. */\n    LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\n    /** Log level for low severity diagnostic messages. */\n\n    LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\n    /** Log level for informational diagnostic messages. */\n\n    LogLevel[LogLevel[\"Information\"] = 2] = \"Information\";\n    /** Log level for diagnostic messages that indicate a non-fatal problem. */\n\n    LogLevel[LogLevel[\"Warning\"] = 3] = \"Warning\";\n    /** Log level for diagnostic messages that indicate a failure in the current operation. */\n\n    LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\n    /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */\n\n    LogLevel[LogLevel[\"Critical\"] = 5] = \"Critical\";\n    /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */\n\n    LogLevel[LogLevel[\"None\"] = 6] = \"None\";\n  })(LogLevel || (LogLevel = {}));\n\n  return LogLevel;\n})(); //# sourceMappingURL=ILogger.js.map","map":null,"metadata":{},"sourceType":"module"}