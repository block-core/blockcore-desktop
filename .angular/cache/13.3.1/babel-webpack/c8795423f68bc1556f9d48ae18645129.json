{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AppModes {\n  constructor() {\n    const activeId = localStorage.getItem('Settings:Mode') || 'basic';\n    this.active = this.available.find(m => m.id === activeId);\n  }\n\n  available = [{\n    id: 'basic',\n    name: 'Basic',\n    features: ['dashboard', 'wallet', 'merchants', 'settings', 'logout']\n  }, {\n    id: 'advanced',\n    name: 'Advanced',\n    features: ['dashboard', 'wallet', 'history', 'merchants', 'settings', 'logout', 'staking', 'walletmode', 'send-options']\n  }, {\n    id: 'experimental',\n    name: 'Experimental',\n    features: ['dashboard', 'wallet', 'history', 'merchants', 'settings', 'logout', 'staking', 'walletmode', 'send-options', 'signing', 'identity', 'hubs', 'debug']\n  }];\n  active;\n\n  enabled(module) {\n    return this.active.features.indexOf(module) > -1;\n  }\n\n  activate(modeId) {\n    this.active = this.available.find(m => m.id === modeId);\n  }\n\n  static ɵfac = function AppModes_Factory(t) {\n    return new (t || AppModes)();\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppModes,\n    factory: AppModes.ɵfac,\n    providedIn: 'root'\n  });\n}","map":null,"metadata":{},"sourceType":"module"}