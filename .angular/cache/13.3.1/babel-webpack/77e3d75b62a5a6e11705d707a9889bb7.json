{"ast":null,"code":"import _classCallCheck from \"D:\\\\Github\\\\Miladsoft\\\\blockcore-hub-1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"D:\\\\Github\\\\Miladsoft\\\\blockcore-hub-1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport var AuthenticationService = /*#__PURE__*/(function () {\n  var AuthenticationService = /*#__PURE__*/function () {\n    function AuthenticationService() {\n      _classCallCheck(this, AuthenticationService);\n\n      this.isAuthenticatedSubject = new BehaviorSubject(this.hasAuthenticated());\n      this.authenticated = false;\n\n      if (!AuthenticationService.singletonInstance) {\n        AuthenticationService.singletonInstance = this;\n      }\n\n      return AuthenticationService.singletonInstance;\n    }\n\n    _createClass(AuthenticationService, [{\n      key: \"isAuthenticated\",\n      value: function isAuthenticated() {\n        return this.isAuthenticatedSubject.asObservable();\n      }\n    }, {\n      key: \"setAuthenticated\",\n      value: function setAuthenticated() {\n        this.authenticated = true;\n        this.isAuthenticatedSubject.next(this.authenticated);\n      }\n    }, {\n      key: \"setAnonymous\",\n      value: function setAnonymous() {\n        this.authenticated = false;\n        this.isAuthenticatedSubject.next(this.authenticated);\n      }\n    }, {\n      key: \"hasAuthenticated\",\n      value: function hasAuthenticated() {\n        return this.authenticated;\n      }\n    }]);\n\n    return AuthenticationService;\n  }();\n\n  AuthenticationService.ɵfac = function AuthenticationService_Factory(t) {\n    return new (t || AuthenticationService)();\n  };\n\n  AuthenticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthenticationService,\n    factory: AuthenticationService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthenticationService;\n})();","map":null,"metadata":{},"sourceType":"module"}