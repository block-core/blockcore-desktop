{"ast":null,"code":"import _classCallCheck from \"D:\\\\Github\\\\Miladsoft\\\\blockcore-hub-1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"D:\\\\Github\\\\Miladsoft\\\\blockcore-hub-1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _regeneratorRuntime from \"D:\\\\Github\\\\Miladsoft\\\\blockcore-hub-1\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n/* eslint-disable */\n\n\nimport { ChangeDetectorRef } from '@angular/core';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { Router } from '@angular/router';\nimport { GlobalService } from '../../services/global.service';\nimport { ApiService } from '../../services/api.service';\nimport { ApplicationStateService } from '../../services/application-state.service';\nimport { WalletInfo } from '../../classes/wallet-info';\nimport { WalletLoad } from '../../classes/wallet-load';\nimport { WalletService } from '../../services/wallet.service';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '..//environments/environment';\nimport { ElectronService } from 'ngx-electron';\nimport { DatabaseStorageService, StorageService } from '../../services/storage.service';\nimport * as bip38 from '../../../libs/bip38';\nimport { Logger } from '../../services/logger.service';\nimport { IdentityService } from '../../services/identity.service';\nimport { ChainService } from '../../services/chain.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../services/authentication.service\";\nimport * as i3 from \"../../services/wallet.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"../../services/global.service\";\nimport * as i6 from \"../../services/identity.service\";\nimport * as i7 from \"../../services/storage.service\";\nimport * as i8 from \"ngx-electron\";\nimport * as i9 from \"../../services/chain.service\";\nimport * as i10 from \"../../services/logger.service\";\nimport * as i11 from \"../../services/api.service\";\nimport * as i12 from \"../../services/application-state.service\";\nimport * as i13 from \"@angular/common\";\nimport * as i14 from \"@angular/material/form-field\";\nimport * as i15 from \"@angular/material/select\";\nimport * as i16 from \"@angular/forms\";\nimport * as i17 from \"@angular/material/core\";\nimport * as i18 from \"@angular/material/input\";\nimport * as i19 from \"@angular/material/button\";\nimport * as i20 from \"@angular/material/divider\";\n\nfunction LoginComponent_div_4_mat_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var account_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", account_r7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n                        \", account_r7.name, \"\\n                    \");\n  }\n}\n\nfunction LoginComponent_div_4_span_10_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"The password is not correct.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_4_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\n                \");\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵtext(3, \"\\n                \");\n    i0.ɵɵelementStart(4, \"mat-form-field\", 18);\n    i0.ɵɵtext(5, \"\\n                    \");\n    i0.ɵɵelementStart(6, \"mat-label\");\n    i0.ɵɵtext(7, \"Wallet password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n                    \");\n    i0.ɵɵelementStart(9, \"input\", 19);\n    i0.ɵɵlistener(\"keyup.enter\", function LoginComponent_div_4_span_10_Template_input_keyup_enter_9_listener() {\n      i0.ɵɵrestoreView(_r10);\n      var ctx_r9 = i0.ɵɵnextContext(2);\n      return ctx_r9.unlock();\n    })(\"ngModelChange\", function LoginComponent_div_4_span_10_Template_input_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      var ctx_r11 = i0.ɵɵnextContext(2);\n      return ctx_r11.password = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n                    \");\n    i0.ɵɵtext(11, \"\\n                    \");\n    i0.ɵɵtext(12, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13, \"\\n                \");\n    i0.ɵɵelement(14, \"br\");\n    i0.ɵɵtext(15, \"\\n                \");\n    i0.ɵɵelementStart(16, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function LoginComponent_div_4_span_10_Template_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r10);\n      var ctx_r12 = i0.ɵɵnextContext(2);\n      return ctx_r12.unlock();\n    });\n    i0.ɵɵtext(17, \"Unlock\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18, \"\\xA0\\n                \");\n    i0.ɵɵelementStart(19, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function LoginComponent_div_4_span_10_Template_button_click_19_listener() {\n      i0.ɵɵrestoreView(_r10);\n      var ctx_r13 = i0.ɵɵnextContext(2);\n      return ctx_r13.cancel();\n    });\n    i0.ɵɵtext(20, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21, \"\\n                \");\n    i0.ɵɵelement(22, \"br\");\n    i0.ɵɵtext(23, \"\\n                \");\n    i0.ɵɵtext(24, \"\\n                \");\n    i0.ɵɵelement(25, \"br\");\n    i0.ɵɵtext(26, \"\\n                \");\n    i0.ɵɵtemplate(27, LoginComponent_div_4_span_10_div_27_Template, 2, 0, \"div\", 12);\n    i0.ɵɵtext(28, \"\\n            \");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.password);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"disabled\", ctx_r4.unlocking);\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.invalidPassword);\n  }\n}\n\nfunction LoginComponent_div_4_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\n                \");\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\\n                \", ctx_r5.errorMessage, \"\\n            \");\n  }\n}\n\nfunction LoginComponent_div_4_mat_divider_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-divider\");\n  }\n}\n\nfunction LoginComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1, \"\\n            \");\n    i0.ɵɵelementStart(2, \"mat-form-field\");\n    i0.ɵɵtext(3, \"\\n                \");\n    i0.ɵɵelementStart(4, \"mat-select\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_div_4_Template_mat_select_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      var ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.selectedAccount = $event;\n    });\n    i0.ɵɵtext(5, \"\\n                    \");\n    i0.ɵɵtemplate(6, LoginComponent_div_4_mat_option_6_Template, 2, 2, \"mat-option\", 16);\n    i0.ɵɵtext(7, \"\\n                \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n\\n            \");\n    i0.ɵɵtemplate(10, LoginComponent_div_4_span_10_Template, 29, 3, \"span\", 12);\n    i0.ɵɵtext(11, \"\\n\\n            \");\n    i0.ɵɵtemplate(12, LoginComponent_div_4_span_12_Template, 4, 1, \"span\", 12);\n    i0.ɵɵtext(13, \"\\n\\n            \");\n    i0.ɵɵtemplate(14, LoginComponent_div_4_mat_divider_14_Template, 1, 0, \"mat-divider\", 12);\n    i0.ɵɵtext(15, \"\\n        \");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.selectedAccount);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.accounts);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.selectedAccount !== null);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.errorMessage);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.selectedAccount === null);\n  }\n}\n\nfunction LoginComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtext(1, \"\\n            \");\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵtext(3, \"\\n                \");\n    i0.ɵɵelementStart(4, \"button\", 23);\n    i0.ɵɵtext(5, \"Create\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \" or\\n                \");\n    i0.ɵɵelementStart(7, \"button\", 24);\n    i0.ɵɵtext(8, \"Restore\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \"\\n                your account\\n            \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \"\\n        \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_span_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n                    Height: \", ctx_r2.status.consensusHeight, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                    Connections: \", ctx_r2.status.inboundPeers.length + ctx_r2.status.outboundPeers.length, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\n                    Node version: \", ctx_r2.status.version, \"\\n                \");\n  }\n}\n\nexport var LoginComponent = /*#__PURE__*/(function () {\n  var LoginComponent = /*#__PURE__*/function () {\n    function LoginComponent(http, cd, authService, walletService, router, globalService, identityService, wallet, storageService, electronService, chains, log, apiService, appState) {\n      _classCallCheck(this, LoginComponent);\n\n      this.http = http;\n      this.cd = cd;\n      this.authService = authService;\n      this.walletService = walletService;\n      this.router = router;\n      this.globalService = globalService;\n      this.identityService = identityService;\n      this.wallet = wallet;\n      this.storageService = storageService;\n      this.electronService = electronService;\n      this.chains = chains;\n      this.log = log;\n      this.apiService = apiService;\n      this.appState = appState;\n      this.hostClass = true;\n      this.hasWallet = false;\n      this.accounts = [];\n      this.password = ''; // Default to empty string, not null/undefined.\n\n      if (electronService.ipcRenderer) {\n        this.ipc = electronService.ipcRenderer;\n      }\n    }\n\n    _createClass(LoginComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        this.loadWallets();\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        if (this.subscription) {\n          this.subscription.unsubscribe();\n        }\n      }\n    }, {\n      key: \"loadWallets\",\n      value: function loadWallets() {\n        var _this = this;\n\n        if (this.appState.isSimpleMode) {\n          this.getLocalWalletFiles();\n        } else {\n          this.subscription = this.apiService.getNodeStatusCustomInterval(10000).subscribe(function (response) {\n            _this.status = response;\n\n            _this.log.info('Status update result: ', _this.status);\n          });\n          this.getWalletFiles();\n        }\n      }\n    }, {\n      key: \"getLocalWalletFiles\",\n      value: function getLocalWalletFiles() {\n        return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          var db, list, wallets;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  // Read accounts from localStorage.\n                  db = new DatabaseStorageService('cityhub');\n                  _context.next = 4;\n                  return db.wallets.toArray();\n\n                case 4:\n                  list = _context.sent;\n                  wallets = list.map(function (item) {\n                    return {\n                      id: item.name,\n                      name: item.name\n                    };\n                  });\n                  this.accounts = wallets;\n                  this.appState.accounts = wallets;\n                  console.log(list);\n                  this.hasWallet = list.length > 0;\n                  _context.next = 15;\n                  break;\n\n                case 12:\n                  _context.prev = 12;\n                  _context.t0 = _context[\"catch\"](0);\n                  this.log.error(_context.t0);\n\n                case 15:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this, [[0, 12]]);\n        }));\n      }\n    }, {\n      key: \"changeMode\",\n      value: function changeMode() {\n        var currentMode = localStorage.getItem('Network:Mode');\n        var shouldExitNode = currentMode !== 'manual'; // Persist the current mode as PreviousMode.\n\n        localStorage.setItem('Network:ModePrevious', localStorage.getItem('Network:Mode'));\n        localStorage.removeItem('Network:Mode');\n        this.appState.changingMode = true;\n        this.electronService.ipcRenderer.send('daemon-change'); // Do not send shutdown command if we're in manual mode.\n\n        if (shouldExitNode) {\n          // Make sure we shut down the existing node when user choose the change mode action.\n          this.apiService.shutdownNode().subscribe(function (response) {// The response from shutdown is returned before the node is fully exited, so put a small delay here.\n            // setTimeout(() => {\n            //     this.router.navigate(['/load']);\n            // }, 1500);\n          });\n        }\n\n        this.electronService.ipcRenderer.send('update-icon', null); // Navigate and show loading indicator.\n\n        this.router.navigate(['/load'], {\n          queryParams: {\n            loading: shouldExitNode\n          }\n        });\n      }\n    }, {\n      key: \"cancel\",\n      value: function cancel() {\n        this.errorMessage = '';\n        this.selectedAccount = null;\n        this.password = '';\n      }\n    }, {\n      key: \"getWalletFiles\",\n      value: function getWalletFiles() {\n        var _this2 = this;\n\n        this.apiService.getWalletFiles().subscribe(function (response) {\n          // if (response.status >= 200 && response.status < 400) {\n          _this2.wallets = response.walletsFiles;\n\n          _this2.globalService.setWalletPath(response.walletsPath);\n\n          if (_this2.wallets.length > 0) {\n            _this2.hasWallet = true;\n            var lastUsedWallet = localStorage.getItem('Network:Wallet'); // eslint-disable-next-line guard-for-in\n\n            for (var wallet in _this2.wallets) {\n              var id = wallet;\n\n              var name = _this2.wallets[wallet].slice(0, -12);\n\n              var account = {\n                id: id,\n                name: name\n              };\n\n              _this2.accounts.push(account);\n\n              _this2.appState.accounts = _this2.accounts;\n\n              if (lastUsedWallet && lastUsedWallet === name) {\n                _this2.selectedAccount = account;\n\n                if (environment.password) {\n                  setTimeout(function () {\n                    _this2.password = environment.password;\n\n                    _this2.unlock();\n                  }, 500);\n                }\n              } // this.wallets[wallet] = this.wallets[wallet].slice(0, -12);\n\n            } // If no wallet has been selected, pick the first one.\n\n\n            if (!_this2.selectedAccount) {\n              _this2.selectedAccount = _this2.accounts[0];\n            }\n          } else {\n            _this2.hasWallet = false;\n          }\n\n          _this2.cd.markForCheck(); // }\n\n        }, function (error) {\n          _this2.apiService.handleException(error);\n        });\n      }\n    }, {\n      key: \"unlock\",\n      value: function unlock() {\n        this.errorMessage = '';\n        this.unlocking = true;\n        this.invalidPassword = false;\n        var chain = this.chains.getChain(this.appState.daemon.network);\n        var coinUnit = chain.unit || chain.chain;\n\n        if (!chain.coin) {\n          chain.coin = chain.name;\n        }\n\n        this.globalService.setWalletName(this.selectedAccount.name);\n        this.storageService.setWalletName(this.selectedAccount.name, coinUnit);\n        this.globalService.setCoinName(chain.coin);\n        this.globalService.setCoinUnit(coinUnit);\n        this.getCurrentNetwork();\n        var walletLoad = new WalletLoad(this.selectedAccount.name, this.password);\n\n        if (this.appState.isSimpleMode) {\n          this.loadLocalWallet(walletLoad);\n        } else {\n          this.loadWallet(walletLoad);\n        }\n      }\n    }, {\n      key: \"loadLocalWallet\",\n      value: function loadLocalWallet(walletLoad) {\n        return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n          var db, wallet, self, start, decryptedKey, stop, diff;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  db = new DatabaseStorageService('cityhub');\n                  _context2.next = 3;\n                  return db.wallets.get({\n                    name: walletLoad.name\n                  });\n\n                case 3:\n                  wallet = _context2.sent;\n                  self = this;\n                  console.log('Load Local Wallet...');\n\n                  try {\n                    start = new Date().getTime();\n                    console.log(wallet); // bip38.decryptAsync(wallet.encryptedSeed, walletLoad.password, (decryptedKey) => {\n                    // }, null, this.appState.networkParams);\n\n                    decryptedKey = bip38.decrypt(wallet.encryptedSeed, walletLoad.password, null, null, this.appState.networkParams);\n                    console.log('decrypted!');\n                    console.log(decryptedKey);\n                    stop = new Date().getTime();\n                    diff = stop - start;\n                    console.log(diff + 'ms taken to decrypt.'); // console.log('decryptedKey:', decryptedKey);\n\n                    self.authService.setAuthenticated();\n                    self.unlocking = false;\n                    localStorage.setItem('Network:Wallet', wallet.name); // Make sure the unlocked wallet is available, especially the extpubkey is required to generate addresses.\n\n                    this.wallet.activeWallet = wallet;\n                    self.router.navigateByUrl('/dashboard');\n                  } catch (err) {\n                    if (err.message !== 'AssertionError [ERR_ASSERTION]') {\n                      self.log.error('Unknown failure on wallet unlock', err);\n                    }\n\n                    self.unlocking = false;\n                    self.invalidPassword = true;\n                  }\n\n                case 7:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this);\n        }));\n      }\n    }, {\n      key: \"getCurrentNetwork\",\n      value: function getCurrentNetwork() {\n        var _this3 = this;\n\n        var walletInfo = new WalletInfo(this.globalService.getWalletName());\n        this.apiService.getGeneralInfoOnce(walletInfo).subscribe(function (response) {\n          // if (response.status >= 200 && response.status < 400) {\n          var responseMessage = response; // TODO: Figure out what we want to do with this node call. The coin name and unit is now being set by the definitions.\n\n          _this3.globalService.setNetwork(responseMessage.network); // if (responseMessage.network === 'CityMain') {\n          //     this.globalService.setCoinName('City');\n          //     this.globalService.setCoinUnit('CITY');\n          // } else if (responseMessage.network === 'CityTest') {\n          //     this.globalService.setCoinName('CityTest');\n          //     this.globalService.setCoinUnit('TCITY');\n          // } else if (responseMessage.network === 'CityRegTest') {\n          //     this.globalService.setCoinName('CityRegTest');\n          //     this.globalService.setCoinUnit('TCITY');\n          // } else if (responseMessage.network === 'StratisMain') {\n          //     this.globalService.setCoinName('Stratis');\n          //     this.globalService.setCoinUnit('STRAT');\n          // } else if (responseMessage.network === 'StratisTest') {\n          //     this.globalService.setCoinName('TestStratis');\n          //     this.globalService.setCoinUnit('TSTRAT');\n          // } else if (responseMessage.network === 'Main') {\n          //     this.globalService.setCoinName('Bitcoin');\n          //     this.globalService.setCoinUnit('BTC');\n          // } else if (responseMessage.network === 'Test') {\n          //     this.globalService.setCoinName('BitcoinTest');\n          //     this.globalService.setCoinUnit('TBTC');\n          // }\n          // }\n\n        }, function (error) {\n          _this3.apiService.handleException(error);\n        });\n      }\n    }, {\n      key: \"loadWallet\",\n      value: function loadWallet(walletLoad) {\n        var _this4 = this;\n\n        this.apiService.loadWallet(walletLoad).subscribe(function (response) {\n          _this4.unlocking = false; // if (response.status >= 200 && response.status < 400) {\n\n          _this4.authService.setAuthenticated();\n\n          _this4.wallet.start();\n\n          localStorage.setItem('Network:Wallet', _this4.wallet.walletName); // Get the physical path to the wallet file.\n\n          var fullPath = _this4.globalService.getWalletFullPath();\n\n          _this4.identityService.unlock(fullPath, walletLoad.password);\n\n          _this4.router.navigateByUrl('/dashboard'); // }\n\n        }, function (error) {\n          if (error.status === 403) {\n            // Invalid password\n            var msg = error.error.errors[0].message;\n            _this4.errorMessage = msg;\n          }\n\n          if (error.status === 400) {\n            // Empty password\n            var _msg = error.error.errors.password[0];\n            _this4.errorMessage = _msg;\n          }\n\n          _this4.wallet.stop();\n\n          _this4.authService.setAnonymous();\n\n          _this4.unlocking = false;\n\n          _this4.apiService.handleException(error);\n        });\n      }\n    }]);\n\n    return LoginComponent;\n  }();\n\n  /** @nocollapse */\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.AuthenticationService), i0.ɵɵdirectiveInject(i3.WalletService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.GlobalService), i0.ɵɵdirectiveInject(i6.IdentityService), i0.ɵɵdirectiveInject(i3.WalletService), i0.ɵɵdirectiveInject(i7.StorageService), i0.ɵɵdirectiveInject(i8.ElectronService), i0.ɵɵdirectiveInject(i9.ChainService), i0.ɵɵdirectiveInject(i10.Logger), i0.ɵɵdirectiveInject(i11.ApiService), i0.ɵɵdirectiveInject(i12.ApplicationStateService));\n  };\n  /** @nocollapse */\n\n\n  LoginComponent.ɵcmp =\n  /** @pureOrBreakMyCode */\n  i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    hostVars: 2,\n    hostBindings: function LoginComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"login\", ctx.hostClass);\n      }\n    },\n    decls: 59,\n    vars: 8,\n    consts: [[1, \"login-container\", \"not-selectable\"], [1, \"login-content\"], [\"class\", \"login-accounts\", 4, \"ngIf\"], [\"class\", \"login-actions\", 4, \"ngIf\"], [1, \"login-mode\"], [\"mat-button\", \"\", 3, \"click\"], [1, \"material-icons\"], [\"mat-button\", \"\", \"routerLink\", \"/advanced\"], [\"id\", \"login-banner-wallpaper\", 1, \"login-banner\", 3, \"ngClass\"], [1, \"login-banner-content\"], [1, \"login-logo\", 3, \"src\"], [1, \"login-banner-text\"], [4, \"ngIf\"], [1, \"login-mode-mobile\"], [1, \"login-accounts\"], [\"placeholder\", \"Select wallet\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Fill out to unlock account\", 3, \"ngModel\", \"keyup.enter\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"login-unlock-button\", 3, \"disabled\", \"click\"], [\"mat-raised-button\", \"\", 1, \"login-cancel-button\", 3, \"click\"], [1, \"login-actions\"], [\"routerLink\", \"/account/create\", \"mat-stroked-button\", \"\"], [\"routerLink\", \"/account/recover\", \"mat-stroked-button\", \"\", \"color\", \"primary\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtext(1, \"\\n    \");\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵtext(3, \"\\n\\n        \");\n        i0.ɵɵtemplate(4, LoginComponent_div_4_Template, 16, 5, \"div\", 2);\n        i0.ɵɵtext(5, \"\\n\\n        \");\n        i0.ɵɵtemplate(6, LoginComponent_div_6_Template, 11, 0, \"div\", 3);\n        i0.ɵɵtext(7, \"\\n\\n        \");\n        i0.ɵɵelementStart(8, \"div\", 4);\n        i0.ɵɵtext(9, \"\\n            \");\n        i0.ɵɵelementStart(10, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_10_listener() {\n          return ctx.changeMode();\n        });\n        i0.ɵɵelementStart(11, \"span\", 6);\n        i0.ɵɵtext(12, \"public\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(13, \" Change network\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(14, \" \\xA0 \");\n        i0.ɵɵelementStart(15, \"button\", 7)(16, \"span\", 6);\n        i0.ɵɵtext(17, \"settings\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(18, \" Advanced\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(19, \"\\n        \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(20, \"\\n    \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(21, \"\\n    \");\n        i0.ɵɵelementStart(22, \"div\", 8);\n        i0.ɵɵtext(23, \"\\n        \");\n        i0.ɵɵelementStart(24, \"div\", 9);\n        i0.ɵɵtext(25, \"\\n            \");\n        i0.ɵɵelement(26, \"img\", 10);\n        i0.ɵɵtext(27, \"\\n            \");\n        i0.ɵɵelement(28, \"br\");\n        i0.ɵɵtext(29, \"\\n            \");\n        i0.ɵɵelement(30, \"br\");\n        i0.ɵɵtext(31, \"\\n            \");\n        i0.ɵɵelementStart(32, \"p\", 11);\n        i0.ɵɵtext(33);\n        i0.ɵɵelement(34, \"br\");\n        i0.ɵɵtext(35);\n        i0.ɵɵelement(36, \"br\");\n        i0.ɵɵtext(37);\n        i0.ɵɵelement(38, \"br\");\n        i0.ɵɵtext(39, \"\\n                \");\n        i0.ɵɵtemplate(40, LoginComponent_span_40_Template, 6, 3, \"span\", 12);\n        i0.ɵɵtext(41, \"\\n            \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(42, \"\\n        \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(43, \"\\n        \");\n        i0.ɵɵelementStart(44, \"div\", 13);\n        i0.ɵɵtext(45, \"\\n            \");\n        i0.ɵɵelementStart(46, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_46_listener() {\n          return ctx.changeMode();\n        });\n        i0.ɵɵelementStart(47, \"span\", 6);\n        i0.ɵɵtext(48, \"public\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(49, \" Change network\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(50, \" \\xA0 \");\n        i0.ɵɵelementStart(51, \"button\", 7)(52, \"span\", 6);\n        i0.ɵɵtext(53, \"settings\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(54, \" Advanced\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(55, \"\\n        \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(56, \"\\n    \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(57, \"\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(58, \"\\n\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.hasWallet);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedAccount === null);\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"ngClass\", \"login-banner-\" + ctx.appState.chain);\n        i0.ɵɵadvance(4);\n        i0.ɵɵpropertyInterpolate1(\"src\", \"assets/\", ctx.appState.chain, \"/logo-full-light.png\", i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate1(\"\\n                Release \", ctx.appState.release, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\\n                Network: \", ctx.appState.daemon.network, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\\n                Mode: \", ctx.appState.daemon.mode, \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.status);\n      }\n    },\n    directives: [i13.NgIf, i14.MatFormField, i15.MatSelect, i16.NgControlStatus, i16.NgModel, i13.NgForOf, i17.MatOption, i14.MatLabel, i18.MatInput, i16.DefaultValueAccessor, i19.MatButton, i20.MatDivider, i4.RouterLink, i13.NgClass],\n    styles: [\".login {\\n  height: 100%;\\n  width: 100%;\\n}\\n.login .login-container {\\n  height: 100%;\\n  width: 100%;\\n  display: flex;\\n  flex-direction: row;\\n}\\n.login .login-content {\\n  width: 44%;\\n  min-width: 240px;\\n  text-align: center;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: stretch;\\n  min-height: 260px;\\n  margin-top: 10%;\\n}\\n.login .login-unlock-button {\\n  margin-bottom: 20px;\\n}\\n.login .login-cancel-button {\\n  margin-right: 10px;\\n}\\n.login .login-logo {\\n  margin-top: 4em;\\n  max-height: 100px;\\n}\\n.login .login-header {\\n  flex-grow: 1;\\n}\\n.login .login-accounts {\\n  flex-grow: 0;\\n}\\n.login .login-actions {\\n  flex-grow: 0;\\n  align-items: center;\\n  justify-content: center;\\n  display: flex;\\n  margin-top: 20px;\\n}\\n.login .login-mode {\\n  flex-grow: 2;\\n  align-items: flex-end;\\n  justify-content: center;\\n  display: flex;\\n  margin-bottom: 20px;\\n}\\n.login .login-banner {\\n  background-color: #dfab3c;\\n  width: 56%;\\n  background-repeat: no-repeat;\\n  background-position: center;\\n  background-size: cover;\\n  text-align: center;\\n}\\n.login .login-banner-city {\\n  background-image: url('splash-image.jpg');\\n}\\n.login .login-banner-btc {\\n  background-image: url('_-_-_-assets-btc-splash-image.jpg');\\n}\\n.login .login-banner-x42 {\\n  background-image: url('_-_-_-assets-splash-image.jpg');\\n}\\n.login .login-banner-ruta {\\n  background-image: url('_-_-_-assets-splash-image.jpg');\\n}\\n.login .login-banner-exos {\\n  background-image: url('_-_-_-assets-splash-image.jpg');\\n}\\n.login .login-banner-implx {\\n  background-image: url('_-_-_-assets-splash-image.jpg');\\n}\\n.login .login-banner-xrc {\\n  background-image: url('_-_-_-assets-xrc-splash-image.jpg');\\n}\\n.login .login-banner-x1 {\\n  background-image: url('_-_-_-assets-x1-splash-image.jpg');\\n}\\n.login .login-banner-home {\\n  background-image: url('_-_-_-assets-home-splash-image.jpg');\\n}\\n.login .login-banner-sbc {\\n  background-image: url('_-_-_-assets-sbc-splash-image.jpg');\\n}\\n.login .login-banner-rsc {\\n  background-image: url('_-_-_-assets-rsc-splash-image.jpg');\\n}\\n.login .login-banner-cybits {\\n  background-image: url('_-_-_-assets-cybits-splash-image.jpg');\\n}\\n.login .login-banner-content {\\n  height: 100%;\\n}\\n.login .login-banner-text {\\n  text-align: right;\\n  bottom: 1em;\\n  right: 1em;\\n  position: absolute;\\n}\\n.login .login-mode-mobile {\\n  display: none;\\n}\\n@media screen and (max-width: 599px) {\\n  .login .login-banner-text {\\n    bottom: 8em;\\n  }\\n  .login .login-container {\\n    flex-direction: column;\\n  }\\n  .login .login-content {\\n    width: 100%;\\n  }\\n  .login .login-banner {\\n    width: 100%;\\n    flex-grow: 1;\\n  }\\n  .login .login-mode-mobile {\\n    display: block;\\n    bottom: 10px;\\n    position: absolute;\\n    min-width: 200px;\\n    margin-left: 25%;\\n    margin-right: 25%;\\n  }\\n  .login .login-mode {\\n    display: none;\\n  }\\n}\"],\n    encapsulation: 2\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}