{"ast":null,"code":"import _classCallCheck from \"D:\\\\Github\\\\Miladsoft\\\\blockcore-hub-1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"D:\\\\Github\\\\Miladsoft\\\\blockcore-hub-1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/api.service\";\nimport * as i2 from \"src/app/services/coincap.service\";\nimport * as i3 from \"src/app/services/coin.service\";\nimport * as i4 from \"../../services/global.service\";\nimport * as i5 from \"../../services/application-state.service\";\nimport * as i6 from \"src/app/services/notification.service\";\nimport * as i7 from \"../../services/details.service\";\nimport * as i8 from \"../../services/wallet.service\";\nimport * as i9 from \"src/app/shared/app-modes\";\nimport * as i10 from \"@angular/forms\";\nimport * as i11 from \"@angular/flex-layout/flex\";\nimport * as i12 from \"@angular/material/card\";\nimport * as i13 from \"@angular/material/icon\";\nimport * as i14 from \"@angular/material/tooltip\";\nimport * as i15 from \"@angular/common\";\nimport * as i16 from \"@angular/material/button\";\nimport * as i17 from \"@angular/router\";\nimport * as i18 from \"../identity/identity-lookup-widget.component\";\nimport * as i19 from \"../../shared/pipes/coin-notation.pipe\";\n\nfunction DashboardComponent_ul_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\")(1, \"li\")(2, \"strong\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"coinNotation\");\n    i0.ɵɵpipe(5, \"coinNotation\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"em\");\n    i0.ɵɵtext(7, \" (unconfirmed)\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 1, ctx_r0.wallet.unconfirmedBalance) || i0.ɵɵpipeBind1(5, 3, 0));\n  }\n}\n\nfunction DashboardComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \" Soon you will be able to buy coins directly in Blockcore Hub. Until then, please visit our website for a list of partners and exchanges. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"a\", 11);\n    i0.ɵɵtext(4, \"Buy Coins\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction DashboardComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \" To fund your wallet, you need to purchase some STRAT. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"a\", 12);\n    i0.ɵɵtext(4, \"Buy STRAT at Binance\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction DashboardComponent_p_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var tile_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" - \", tile_r5.title, \" \");\n  }\n}\n\nfunction DashboardComponent_app_identity_lookup_widget_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-identity-lookup-widget\");\n  }\n}\n\nexport var DashboardComponent = /*#__PURE__*/(function () {\n  var DashboardComponent = /*#__PURE__*/function () {\n    function DashboardComponent(apiService, coincap, coin, globalService, appState, notifications, detailsService, wallet, appModes, fb) {\n      _classCallCheck(this, DashboardComponent);\n\n      this.apiService = apiService;\n      this.coincap = coincap;\n      this.coin = coin;\n      this.globalService = globalService;\n      this.appState = appState;\n      this.notifications = notifications;\n      this.detailsService = detailsService;\n      this.wallet = wallet;\n      this.appModes = appModes;\n      this.fb = fb;\n      this.hostClass = true;\n      this.walletInfo = 'When you send, balance can\\ntemporarily go from confirmed\\nto unconfirmed.';\n      this.tickerInfo = 'Change to the next ticker.';\n      this.coins = new Array();\n      this.selectedCoinTickerIndex = -1;\n      this.searchInput = ''; // Make sure we update wallet at higher frequency.\n\n      this.wallet.active = true;\n    }\n\n    _createClass(DashboardComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {// this.startSubscriptions();\n      }\n    }, {\n      key: \"changeTicker\",\n      value: function changeTicker(change) {\n        this.selectedCoinTickerIndex += change;\n\n        if (this.selectedCoinTickerIndex < 0) {\n          this.selectedCoinTickerIndex = this.coins.length - 1;\n        } else if (this.selectedCoinTickerIndex >= this.coins.length) {\n          this.selectedCoinTickerIndex = 0;\n        }\n\n        this.selectedCoinTicker = this.coins[this.selectedCoinTickerIndex];\n      }\n    }, {\n      key: \"lookup\",\n      value: function lookup() {}\n    }, {\n      key: \"startSubscriptions\",\n      value: function startSubscriptions() {\n        this.subscriptions = [];\n        var asset = this.appState.chain;\n\n        if (asset === 'city') {\n          asset = 'bitcoin'; // Until coincap.io supports CITY, we'll revert to Bitcoin.\n        } // this.subscriptions.push(this.coincap.getAsset(asset)\n        //     .subscribe(\n        //         response => {\n        //             const coincapAsset = response.data as CoincapAsset;\n        //             coincapAsset.pair = 'USD';\n        //             coincapAsset.volumepair = 'USD';\n        //             this.coins[1] = this.mapCoincapToAsset(coincapAsset);\n        //         },\n        //         error => {\n        //             this.coincap.handleException(error);\n        //             // this.reactivate();\n        //         }\n        //     ));\n        // this.subscriptions.push(this.coin.getTicker('btc')\n        //     .subscribe(\n        //         response => {\n        //             const coinAsset = response.result as P2pb2bAsset;\n        //             coinAsset.pair = 'BTC';\n        //             coinAsset.volumepair = 'CITY';\n        //             this.coins[0] = this.mapP2pb2bToAsset(coinAsset);\n        //             if (this.selectedCoinTickerIndex === -1) {\n        //                 this.changeTicker(1);\n        //             }\n        //         },\n        //         error => {\n        //             this.coincap.handleException(error);\n        //             // this.reactivate();\n        //         }\n        //     ));\n        // this.subscriptions.push(this.coin.getTicker('usd')\n        //     .subscribe(\n        //         response => {\n        //             const coinAsset = response.result as P2pb2bAsset;\n        //             coinAsset.pair = 'USD';\n        //             coinAsset.volumepair = 'CITY';\n        //             this.coins[1] = this.mapP2pb2bToAsset(coinAsset);\n        //         },\n        //         error => {\n        //             this.coincap.handleException(error);\n        //             this.reactivate();\n        //         }\n        //     ));\n\n      }\n    }, {\n      key: \"mapP2pb2bToAsset\",\n      value: function mapP2pb2bToAsset(coin) {\n        var asset = {\n          changePercent24Hr: coin.change,\n          marketCap: '0',\n          maxSupply: '0',\n          price: coin.last,\n          volume24Hr: coin.volume,\n          symbol: 'CITY',\n          name: 'City Coin',\n          pair: coin.pair,\n          volumepair: coin.volumepair\n        };\n        return asset;\n      }\n    }, {\n      key: \"mapCoincapToAsset\",\n      value: function mapCoincapToAsset(coin) {\n        var asset = {\n          changePercent24Hr: coin.changePercent24Hr,\n          marketCap: '0',\n          maxSupply: '0',\n          price: coin.priceUsd,\n          volume24Hr: coin.volumeUsd24Hr,\n          symbol: 'BTC',\n          name: 'Bitcoin',\n          pair: coin.pair,\n          volumepair: coin.volumepair\n        };\n        return asset;\n      }\n    }, {\n      key: \"cancelSubscriptions\",\n      value: function cancelSubscriptions() {\n        if (!this.subscriptions) {\n          return;\n        } // eslint-disable-next-line @typescript-eslint/prefer-for-of\n\n\n        for (var i = 0; i < this.subscriptions.length; i++) {\n          this.subscriptions[i].unsubscribe();\n        }\n      }\n      /** Called to cancel and restart all subscriptions. */\n\n    }, {\n      key: \"reactivate\",\n      value: function reactivate() {\n        this.cancelSubscriptions();\n        this.startSubscriptions();\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        // When navigate away from dashboard, we'll make the wallet update more slowly.\n        this.wallet.active = false;\n        this.cancelSubscriptions();\n      }\n    }]);\n\n    return DashboardComponent;\n  }();\n\n  DashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.CoincapService), i0.ɵɵdirectiveInject(i3.CoinService), i0.ɵɵdirectiveInject(i4.GlobalService), i0.ɵɵdirectiveInject(i5.ApplicationStateService), i0.ɵɵdirectiveInject(i6.NotificationService), i0.ɵɵdirectiveInject(i7.DetailsService), i0.ɵɵdirectiveInject(i8.WalletService), i0.ɵɵdirectiveInject(i9.AppModes), i0.ɵɵdirectiveInject(i10.FormBuilder));\n  };\n\n  DashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    hostVars: 2,\n    hostBindings: function DashboardComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"dashboard\", ctx.hostClass);\n      }\n    },\n    decls: 45,\n    vars: 14,\n    consts: [[1, \"content\"], [\"fxLayout\", \"row\", \"fxLayout.xs\", \"column\", \"fxLayout.sm\", \"column\", \"fxFlex\", \"\", \"fxLayoutGap\", \"20px grid\", \"fxLayoutGap.xs\", \"0px grid\", \"fxLayoutGap.sm\", \"0px grid\"], [\"fxFlex\", \"\"], [1, \"dashboard-card\"], [1, \"dashboard-info-icon\", 3, \"matTooltip\"], [1, \"text-uppercase\"], [4, \"ngIf\"], [\"mat-stroked-button\", \"\", \"color\", \"primary\", \"routerLink\", \"/wallet/send\"], [\"mat-stroked-button\", \"\", \"color\", \"primary\", \"routerLink\", \"/wallet/receive\"], [4, \"ngFor\", \"ngForOf\"], [\"mat-stroked-button\", \"\", \"routerLink\", \"/notifications\"], [\"href\", \"https://www.city-chain.org/#coins\", \"target\", \"_blank\", \"mat-stroked-button\", \"\"], [\"href\", \"https://www.binance.com/?ref=12007023\", \"target\", \"_blank\", \"mat-stroked-button\", \"\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"mat-card\", 3)(4, \"mat-icon\", 4);\n        i0.ɵɵtext(5, \"info\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"mat-card-title\");\n        i0.ɵɵtext(7, \"Balance\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"mat-card-subtitle\");\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-card-content\")(11, \"p\")(12, \"strong\");\n        i0.ɵɵtext(13);\n        i0.ɵɵpipe(14, \"coinNotation\");\n        i0.ɵɵpipe(15, \"coinNotation\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"small\", 5);\n        i0.ɵɵtext(17);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(18, DashboardComponent_ul_18_Template, 8, 5, \"ul\", 6);\n        i0.ɵɵelementStart(19, \"p\")(20, \"button\", 7);\n        i0.ɵɵtext(21, \"Send\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(22, \"\\xA0 \");\n        i0.ɵɵelementStart(23, \"button\", 8);\n        i0.ɵɵtext(24, \"Receive\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(25, \"\\xA0 \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"mat-card\", 3)(27, \"mat-card-title\");\n        i0.ɵɵtext(28, \"Buy coins\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"mat-card-subtitle\");\n        i0.ɵɵtext(30, \"You can buy coins from selected partners, and from exchanges.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"mat-card-content\");\n        i0.ɵɵtemplate(32, DashboardComponent_div_32_Template, 5, 0, \"div\", 6);\n        i0.ɵɵtemplate(33, DashboardComponent_div_33_Template, 5, 0, \"div\", 6);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(34, \"div\", 2)(35, \"mat-card\", 3)(36, \"mat-card-title\");\n        i0.ɵɵtext(37);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"mat-card-subtitle\");\n        i0.ɵɵtext(39, \"Summary from your Notification Center\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"mat-card-content\");\n        i0.ɵɵtemplate(41, DashboardComponent_p_41_Template, 2, 1, \"p\", 9);\n        i0.ɵɵelementStart(42, \"button\", 10);\n        i0.ɵɵtext(43, \"Open Notification Center\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(44, DashboardComponent_app_identity_lookup_widget_44_Template, 1, 0, \"app-identity-lookup-widget\", 6);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"matTooltip\", ctx.walletInfo);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\"The balance of: \", ctx.wallet.walletName, \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(14, 10, ctx.wallet.confirmedBalance) || i0.ɵɵpipeBind1(15, 12, 0));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.wallet.coinUnit, \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.wallet.unconfirmedBalance);\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngIf\", ctx.appState.chain === \"city\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.appState.chain === \"stratis\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"Notifications (\", ctx.notifications.count, \")\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.notifications.notifications.slice().reverse());\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.appModes.enabled(\"hubs\"));\n      }\n    },\n    directives: [i11.DefaultLayoutDirective, i11.DefaultFlexDirective, i11.DefaultLayoutGapDirective, i12.MatCard, i13.MatIcon, i14.MatTooltip, i12.MatCardTitle, i12.MatCardSubtitle, i12.MatCardContent, i15.NgIf, i16.MatButton, i17.RouterLink, i16.MatAnchor, i15.NgForOf, i18.IdentityLookupWidgetComponent],\n    pipes: [i19.CoinNotationPipe],\n    styles: [\".dashboard .history{width:80%}.dashboard .history .history-table{width:100%}.dashboard div[fxLayoutAlign]{padding:15px 10px 10px 25px}.dashboard .dashboard-card{min-height:150px}.dashboard .mat-grid-tile .mat-figure{align-items:flex-start}.dashboard .dashboard-coinmap{min-height:200px}.dashboard .dashboard-info-icon{float:right;cursor:default}.dashboard .transaction-details-button{height:10px;margin:0;padding:0}.dashboard .transaction-details-button .mat-icon{font-size:10px;margin:0;padding:0}.dashboard .link{cursor:pointer}.dashboard mat-card{margin-bottom:20px}.dashboard .dashboard-split-card{display:flex;flex-direction:row}.dashboard .dashboard-split-left{flex-grow:2;min-width:230px;width:65%}.dashboard .dashboard-split-right{padding-left:20px;flex-grow:1;width:35%;align-self:center}.dashboard .marketprice{color:green}.dashboard .marketprice-negative{color:red}.dashboard .marketprice-larger{font-size:1.2rem}.dashboard .marketprice-table{width:100%}@media screen and (max-width: 599px){.dashboard .dashboard-split-card{flex-direction:column}.dashboard .dashboard-split-left{flex-grow:2;width:100%}.dashboard .dashboard-split-right{flex-grow:1;width:100%;align-self:center}}\\n\"],\n    encapsulation: 2\n  });\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}