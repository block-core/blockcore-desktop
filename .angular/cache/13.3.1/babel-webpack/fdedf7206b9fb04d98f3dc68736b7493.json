{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { WalletInfo } from '@models/wallet-info';\nimport { TransactionSending } from '@models/transaction-sending';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/api.service\";\nimport * as i2 from \"../../services/global.service\";\nimport * as i3 from \"../../services/wallet.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"../../services/application-state.service\";\nimport * as i6 from \"../../services/details.service\";\nimport * as i7 from \"../../shared/app-modes\";\nimport * as i8 from \"@angular/material/dialog\";\nimport * as i9 from \"src/app/services/logger.service\";\nimport * as i10 from \"@angular/forms\";\nimport * as i11 from \"@angular/material/tabs\";\nimport * as i12 from \"@angular/material/icon\";\nimport * as i13 from \"../../shared/grid/grid-container/grid-container.component\";\nimport * as i14 from \"../../shared/grid/grid-cell/grid-cell.directive\";\nimport * as i15 from \"@angular/material/card\";\nimport * as i16 from \"@angular/common\";\nimport * as i17 from \"@angular/material/form-field\";\nimport * as i18 from \"@angular/material/input\";\nimport * as i19 from \"@angular/material/button\";\nimport * as i20 from \"@angular/material/list\";\nimport * as i21 from \"@angular/material/core\";\nimport * as i22 from \"@angular/material/select\";\nimport * as i23 from \"../../shared/pipes/coin-notation.pipe\";\n\nfunction StakingComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 7);\n    i0.ɵɵtext(1, \"local_fire_department\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2, \" Hot \");\n  }\n}\n\nfunction StakingComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"mat-card\", 4)(2, \"mat-card-title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"coinNotation\");\n    i0.ɵɵpipe(5, \"coinNotation\");\n    i0.ɵɵelementStart(6, \"mat-icon\", 7);\n    i0.ɵɵtext(7, \"ac_unit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"mat-card-subtitle\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"mat-card-content\")(11, \"strong\");\n    i0.ɵɵtext(12);\n    i0.ɵɵpipe(13, \"coinNotation\");\n    i0.ɵɵpipe(14, \"coinNotation\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"em\");\n    i0.ɵɵtext(16, \" (unconfirmed)\");\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(4, 5, ctx_r1.confirmedBalance) || i0.ɵɵpipeBind1(5, 7, 0), \" \", ctx_r1.wallet.coinUnit, \" \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"Balance of online cold staking: \", ctx_r1.wallet.walletName, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(13, 9, ctx_r1.unconfirmedBalance) || i0.ɵɵpipeBind1(14, 11, 0), \" \", ctx_r1.wallet.coinUnit, \"\");\n  }\n}\n\nfunction StakingComponent_div_35_mat_card_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-card\", 4)(1, \"mat-card-title\");\n    i0.ɵɵtext(2, \"Start staking\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-card-subtitle\");\n    i0.ɵɵtext(4, \"Start staking by unlocking your wallet\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-card-content\", 17)(6, \"form\", 18)(7, \"div\", 19)(8, \"mat-form-field\", 20)(9, \"mat-label\");\n    i0.ɵɵtext(10, \"Wallet password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"br\");\n    i0.ɵɵelementStart(13, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function StakingComponent_div_35_mat_card_1_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return ctx_r23.startStaking();\n    });\n    i0.ɵɵelementStart(14, \"mat-icon\");\n    i0.ɵɵtext(15, \"play_arrow\");\n    i0.ɵɵelementEnd()()()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r21 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"formGroup\", ctx_r21.stakingForm);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"disabled\", ctx_r21.wallet.isStarting || !ctx_r21.stakingForm.valid);\n  }\n}\n\nfunction StakingComponent_div_35_mat_card_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-card\", 4)(1, \"mat-card-title\");\n    i0.ɵɵtext(2, \"Staking action\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-card-subtitle\");\n    i0.ɵɵtext(4, \"Click to stop staking\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-card-content\", 17)(6, \"p\")(7, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function StakingComponent_div_35_mat_card_2_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext(2);\n      return ctx_r25.stopStaking();\n    });\n    i0.ɵɵelementStart(8, \"mat-icon\");\n    i0.ɵɵtext(9, \"stop\");\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r22 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"disabled\", ctx_r22.wallet.isStopping);\n  }\n}\n\nfunction StakingComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtemplate(1, StakingComponent_div_35_mat_card_1_Template, 16, 2, \"mat-card\", 16);\n    i0.ɵɵtemplate(2, StakingComponent_div_35_mat_card_2_Template, 10, 1, \"mat-card\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.wallet.stakingEnabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.wallet.stakingEnabled);\n  }\n}\n\nfunction StakingComponent_div_36_mat_card_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card\", 4)(1, \"mat-card-title\");\n    i0.ɵɵtext(2, \"Empty balance\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-card-subtitle\");\n    i0.ɵɵtext(4, \"Balance is required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-card-content\")(6, \"p\");\n    i0.ɵɵtext(7, \"The balance of this wallet is zero. You must deposit some funds before you can activate staking.\");\n    i0.ɵɵelementEnd()()();\n  }\n}\n\nfunction StakingComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtemplate(1, StakingComponent_div_36_mat_card_1_Template, 8, 0, \"mat-card\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.wallet.stakingEnabled);\n  }\n}\n\nfunction StakingComponent_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"mat-card\", 4)(2, \"mat-card-title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-card-subtitle\");\n    i0.ɵɵtext(5, \"Percentage of network\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", (ctx_r4.wallet.stakingWeight / ctx_r4.wallet.netStakingWeight * 100).toFixed(6), \"%\");\n  }\n}\n\nfunction StakingComponent_div_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"mat-card\", 4)(2, \"mat-card-title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"number\");\n    i0.ɵɵpipe(5, \"coinNotation\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-card-subtitle\");\n    i0.ɵɵtext(7, \"Your weight\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind2(4, 2, i0.ɵɵpipeBind1(5, 5, ctx_r5.wallet.stakingWeight), \"1.0-0\"), \" \", ctx_r5.wallet.coinUnit, \"\");\n  }\n}\n\nfunction StakingComponent_div_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"mat-card\", 4)(2, \"mat-card-title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"number\");\n    i0.ɵɵpipe(5, \"coinNotation\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-card-subtitle\");\n    i0.ɵɵtext(7, \"Network weight\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind2(4, 2, i0.ɵɵpipeBind1(5, 5, ctx_r6.wallet.netStakingWeight), \"1.0-0\"), \" \", ctx_r6.wallet.coinUnit, \"\");\n  }\n}\n\nfunction StakingComponent_div_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"mat-card\", 4)(2, \"mat-card-title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-card-subtitle\");\n    i0.ɵɵtext(5, \"Expected reward time\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r7.wallet.dateTime);\n  }\n}\n\nfunction StakingComponent_div_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"mat-card\", 4)(2, \"mat-card-title\");\n    i0.ɵɵtext(3, \"Advanced\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-card-subtitle\");\n    i0.ɵɵtext(5, \"Details on your staking status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-card-content\")(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelement(9, \"br\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelement(11, \"br\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelement(13, \"br\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelement(15, \"br\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelement(17, \"br\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelement(19, \"br\");\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\" CurrentBlockSize: \", ctx_r8.wallet.stakingInfo.currentBlockSize, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" CurrentBlockTx: \", ctx_r8.wallet.stakingInfo.currentBlockTx, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" PooledTx: \", ctx_r8.wallet.stakingInfo.pooledTx, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Difficulty: \", ctx_r8.wallet.stakingInfo.difficulty, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Search interval: \", ctx_r8.wallet.stakingInfo.searchInterval, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Errors: \", ctx_r8.wallet.stakingInfo.errors, \"\");\n  }\n}\n\nfunction StakingComponent_ng_template_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 7);\n    i0.ɵɵtext(1, \"ac_unit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2, \" Cold \");\n  }\n}\n\nfunction StakingComponent_div_66_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"mat-card\", 4)(2, \"mat-card-title\");\n    i0.ɵɵtext(3, \"Offline or Online?\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-card-content\", 5);\n    i0.ɵɵtext(5, \" Offline means that your funds are sent to an online cold staking wallet. This online cold staking wallet can be your own computer, or you can find third party online providers that allows you to delegate your staking. \");\n    i0.ɵɵelement(6, \"br\")(7, \"br\");\n    i0.ɵɵtext(8, \" If you choose to run online cold staking, your computer must be online at all times. Your computer can perform offline cold staking for others when you run in this mode. \");\n    i0.ɵɵelement(9, \"br\")(10, \"br\");\n    i0.ɵɵelementStart(11, \"h3\");\n    i0.ɵɵtext(12, \"Choose mode\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function StakingComponent_div_66_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r29);\n      const ctx_r28 = i0.ɵɵnextContext();\n      return ctx_r28.setMode(\"offline\");\n    });\n    i0.ɵɵelementStart(14, \"mat-icon\");\n    i0.ɵɵtext(15, \"cloud_off\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16, \" Offline Cold Staking \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \"\\u00A0 \");\n    i0.ɵɵelementStart(18, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function StakingComponent_div_66_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r29);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return ctx_r30.setMode(\"online\");\n    });\n    i0.ɵɵelementStart(19, \"mat-icon\");\n    i0.ɵɵtext(20, \"cloud\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21, \" Online Cold Staking \");\n    i0.ɵɵelementEnd()()()();\n  }\n}\n\nfunction StakingComponent_div_67_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"mat-card\", 4)(2, \"mat-card-title\");\n    i0.ɵɵtext(3, \"Online\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-card-content\", 5);\n    i0.ɵɵtext(5, \" You are about to enable online cold staking on this wallet. This is a non-reversible operation. Fill in your password to continue. \");\n    i0.ɵɵelement(6, \"br\")(7, \"br\");\n    i0.ɵɵelementStart(8, \"form\", 18)(9, \"div\", 19)(10, \"mat-form-field\", 20)(11, \"mat-label\");\n    i0.ɵɵtext(12, \"Wallet password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"input\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"br\");\n    i0.ɵɵelementStart(15, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function StakingComponent_div_67_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return ctx_r31.enableColdStaking();\n    });\n    i0.ɵɵelementStart(16, \"mat-icon\");\n    i0.ɵɵtext(17, \"cloud\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18, \" Enable Online Cold Staking \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19, \" \\u00A0 \");\n    i0.ɵɵelementStart(20, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function StakingComponent_div_67_Template_button_click_20_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r33 = i0.ɵɵnextContext();\n      return ctx_r33.setMode(\"\");\n    });\n    i0.ɵɵtext(21, \" Cancel \");\n    i0.ɵɵelementEnd()()()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"formGroup\", ctx_r11.coldStakingForm);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"disabled\", ctx_r11.wallet.isStarting || !ctx_r11.coldStakingForm.valid);\n  }\n}\n\nfunction StakingComponent_div_68_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"mat-card\", 4)(2, \"mat-card-title\");\n    i0.ɵɵtext(3, \"Offline\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-card-content\", 5);\n    i0.ɵɵtext(5, \" You are about to enable offline cold staking on this wallet. This is a non-reversible operation. Fill in your password to continue. \");\n    i0.ɵɵelement(6, \"br\")(7, \"br\");\n    i0.ɵɵelementStart(8, \"form\", 18)(9, \"div\", 19)(10, \"mat-form-field\", 20)(11, \"mat-label\");\n    i0.ɵɵtext(12, \"Wallet password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"input\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"br\");\n    i0.ɵɵelementStart(15, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function StakingComponent_div_68_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r34 = i0.ɵɵnextContext();\n      return ctx_r34.enableDelegatedStaking();\n    });\n    i0.ɵɵelementStart(16, \"mat-icon\");\n    i0.ɵɵtext(17, \"cloud_off\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18, \" Enable Offline Cold Staking \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19, \" \\u00A0 \");\n    i0.ɵɵelementStart(20, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function StakingComponent_div_68_Template_button_click_20_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r36 = i0.ɵɵnextContext();\n      return ctx_r36.setMode(\"\");\n    });\n    i0.ɵɵtext(21, \" Cancel \");\n    i0.ɵɵelementEnd()()()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"formGroup\", ctx_r12.delegatedForm);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"disabled\", ctx_r12.wallet.isStarting || !ctx_r12.delegatedForm.valid);\n  }\n}\n\nfunction StakingComponent_div_69_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"mat-card\", 4)(2, \"mat-card-title\");\n    i0.ɵɵtext(3, \"Offline Cold Staking Enabled\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-card-subtitle\");\n    i0.ɵɵtext(5, \"Your wallet is enabled for offline cold staking staking\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"mat-card-content\", 17);\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction StakingComponent_div_70_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"mat-card\", 4)(2, \"mat-card-title\");\n    i0.ɵɵtext(3, \"Offline Cold Staking Address\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-card-subtitle\");\n    i0.ɵɵtext(5, \"Target address for cold staking setup\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-card-content\", 17);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r14.delegatedStakingAddress, \" \");\n  }\n}\n\nfunction StakingComponent_mat_list_item_79_mat_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 30);\n    i0.ɵɵtext(1, \"remove_circle\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction StakingComponent_mat_list_item_79_mat_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 30);\n    i0.ɵɵtext(1, \"add_circle\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction StakingComponent_mat_list_item_79_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-list-item\");\n    i0.ɵɵtemplate(1, StakingComponent_mat_list_item_79_mat_icon_1_Template, 2, 0, \"mat-icon\", 28);\n    i0.ɵɵtemplate(2, StakingComponent_mat_list_item_79_mat_icon_2_Template, 2, 0, \"mat-icon\", 28);\n    i0.ɵɵelementStart(3, \"div\", 29);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"coinNotation\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 29);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 29);\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const tx_r37 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", tx_r37.type === \"sent\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", tx_r37.type === \"received\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(5, 6, tx_r37.amount), \" (\", tx_r37.type, \")\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(tx_r37.toAddress);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(10, 8, tx_r37.timestamp * 1000, \"short\"));\n  }\n}\n\nfunction StakingComponent_mat_list_item_80_mat_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 30);\n    i0.ɵɵtext(1, \"remove_circle\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction StakingComponent_mat_list_item_80_mat_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 30);\n    i0.ɵɵtext(1, \"add_circle\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction StakingComponent_mat_list_item_80_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-list-item\");\n    i0.ɵɵtemplate(1, StakingComponent_mat_list_item_80_mat_icon_1_Template, 2, 0, \"mat-icon\", 28);\n    i0.ɵɵtemplate(2, StakingComponent_mat_list_item_80_mat_icon_2_Template, 2, 0, \"mat-icon\", 28);\n    i0.ɵɵelementStart(3, \"div\", 29);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"coinNotation\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 29);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 29);\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const tx_r40 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", tx_r40.type === \"sent\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", tx_r40.type === \"received\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(5, 6, tx_r40.amount), \" (\", tx_r40.type, \")\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(tx_r40.toAddress);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(10, 8, tx_r40.timestamp * 1000, \"short\"));\n  }\n}\n\nfunction StakingComponent_div_81_mat_option_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 32);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const account_r45 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", account_r45.address);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", account_r45.name, \" \");\n  }\n}\n\nfunction StakingComponent_div_81_div_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"The password is not correct.\");\n    i0.ɵɵelement(2, \"br\")(3, \"br\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction StakingComponent_div_81_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r47 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"mat-card\", 4)(2, \"mat-card-title\");\n    i0.ɵɵtext(3, \"Setup\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-card-subtitle\");\n    i0.ɵɵtext(5, \"Final step is to fill out below and submit the activation transaction\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-card-content\", 5)(7, \"form\", 18)(8, \"div\", 19)(9, \"p\");\n    i0.ɵɵtext(10, \" Pick online cold staking local wallet or fill out address below from an online staking provider: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"mat-form-field\", 20)(12, \"mat-select\", 31);\n    i0.ɵɵlistener(\"selectionChange\", function StakingComponent_div_81_Template_mat_select_selectionChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r47);\n      const ctx_r46 = i0.ɵɵnextContext();\n      return ctx_r46.onAccountChanged($event);\n    });\n    i0.ɵɵelementStart(13, \"mat-option\", 32);\n    i0.ɵɵtext(14, \"Manual / Online Provider\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(15, StakingComponent_div_81_mat_option_15_Template, 2, 2, \"mat-option\", 33);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(16, \"br\");\n    i0.ɵɵelementStart(17, \"mat-form-field\", 20)(18, \"mat-label\");\n    i0.ɵɵtext(19, \"Online Cold Staking Address (From third party or your own online cold staking wallet)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(20, \"input\", 34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21, \" \\u00A0\");\n    i0.ɵɵelementStart(22, \"a\", 35);\n    i0.ɵɵtext(23, \"Discovery Online Staking Providers\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(24, \"br\");\n    i0.ɵɵelementStart(25, \"mat-form-field\", 20)(26, \"mat-label\");\n    i0.ɵɵtext(27, \"Amount\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(28, \"input\", 36);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(29, \" \\u00A0\");\n    i0.ɵɵelementStart(30, \"button\", 37);\n    i0.ɵɵlistener(\"click\", function StakingComponent_div_81_Template_button_click_30_listener() {\n      i0.ɵɵrestoreView(_r47);\n      const ctx_r48 = i0.ɵɵnextContext();\n      return ctx_r48.getMaxAmount();\n    });\n    i0.ɵɵtext(31, \"MAX\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(32, \"br\");\n    i0.ɵɵelementStart(33, \"mat-form-field\", 20)(34, \"mat-label\");\n    i0.ɵɵtext(35, \"Fee\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(36, \"input\", 38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(37, \"br\");\n    i0.ɵɵelementStart(38, \"mat-form-field\", 20)(39, \"mat-label\");\n    i0.ɵɵtext(40, \"Wallet password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(41, \"input\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(42, \"br\");\n    i0.ɵɵtemplate(43, StakingComponent_div_81_div_43_Template, 4, 0, \"div\", 39);\n    i0.ɵɵelementStart(44, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function StakingComponent_div_81_Template_button_click_44_listener() {\n      i0.ɵɵrestoreView(_r47);\n      const ctx_r49 = i0.ɵɵnextContext();\n      return ctx_r49.setupStaking();\n    });\n    i0.ɵɵelementStart(45, \"mat-icon\");\n    i0.ɵɵtext(46, \"cloud_upload\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(47, \" Broadcast Transaction \");\n    i0.ɵɵelementEnd()()()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"formGroup\", ctx_r17.offlineForm);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r17.localOnlineColdStakingAccounts);\n    i0.ɵɵadvance(28);\n    i0.ɵɵproperty(\"ngIf\", ctx_r17.invalidPassword);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r17.wallet.isStarting || !ctx_r17.offlineForm.valid);\n  }\n}\n\nfunction StakingComponent_div_82_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"mat-card\", 4)(2, \"mat-card-title\");\n    i0.ɵɵtext(3, \"Online Cold Staking Enabled\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-card-subtitle\");\n    i0.ɵɵtext(5, \"Your wallet is enabled for online cold staking\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-card-content\", 17);\n    i0.ɵɵtext(7, \" To start staking with your online cold staking wallet, go to the \\\"Hot\\\" staking on the top and fill out your password to begin secure hot cold staking. \");\n    i0.ɵɵelementEnd()()();\n  }\n}\n\nfunction StakingComponent_div_83_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"mat-card\", 4)(2, \"mat-card-title\");\n    i0.ɵɵtext(3, \"Online Cold Staking Address\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-card-subtitle\");\n    i0.ɵɵtext(5, \"Target address for cold staking setup\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-card-content\", 17);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r19 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r19.coldStakingAddress, \" \");\n  }\n}\n\nfunction StakingComponent_div_84_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 40)(1, \"mat-card\", 4)(2, \"mat-card-title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"coinNotation\");\n    i0.ɵɵpipe(5, \"coinNotation\");\n    i0.ɵɵelementStart(6, \"mat-icon\", 7);\n    i0.ɵɵtext(7, \"ac_unit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"mat-card-subtitle\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"mat-card-content\")(11, \"strong\");\n    i0.ɵɵtext(12);\n    i0.ɵɵpipe(13, \"coinNotation\");\n    i0.ɵɵpipe(14, \"coinNotation\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"em\");\n    i0.ɵɵtext(16, \" (unconfirmed)\");\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r20 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(4, 5, ctx_r20.confirmedBalance) || i0.ɵɵpipeBind1(5, 7, 0), \" \", ctx_r20.wallet.coinUnit, \" \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"Balance of online cold staking (\", ctx_r20.wallet.walletName, \")\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(13, 9, ctx_r20.unconfirmedBalance) || i0.ɵɵpipeBind1(14, 11, 0), \" \", ctx_r20.wallet.coinUnit, \"\");\n  }\n}\n\nexport class StakingComponent {\n  apiService;\n  globalService;\n  walletService;\n  router;\n  appState;\n  detailsService;\n  wallet;\n  appModes;\n  dialog;\n  log;\n  fb;\n  ref;\n  hostClass = true;\n  stakingForm;\n  delegatedForm;\n  offlineForm;\n  coldStakingForm;\n  walletInfo = 'When you send, balance can\\ntemporarily go from confirmed\\nto unconfirmed.';\n  displayedColumns = ['transactionType', 'transactionAmount', 'transactionTimestamp'];\n  dataSource = new MatTableDataSource();\n  walletServiceSubscription;\n  coldStakingSubscription;\n  firstTransactionDate;\n  countReceived;\n  countSent;\n  walletStatistics;\n  coldStakingInfo;\n  delegatedStakingAddress = '';\n  coldStakingAddress = '';\n  links = [{\n    title: 'All',\n    filter: ''\n  }, {\n    title: 'Received',\n    filter: 'received'\n  }, {\n    title: 'Sent',\n    filter: 'sent'\n  }];\n  activeLink = this.links[0];\n  paginator;\n  sort;\n\n  constructor(apiService, globalService, walletService, router, appState, detailsService, wallet, appModes, dialog, log, fb, ref) {\n    this.apiService = apiService;\n    this.globalService = globalService;\n    this.walletService = walletService;\n    this.router = router;\n    this.appState = appState;\n    this.detailsService = detailsService;\n    this.wallet = wallet;\n    this.appModes = appModes;\n    this.dialog = dialog;\n    this.log = log;\n    this.fb = fb;\n    this.ref = ref;\n    this.buildStakingForm();\n    this.appState.pageMode = false;\n  }\n\n  buildStakingForm() {\n    this.stakingForm = this.fb.group({\n      walletPassword: ['', Validators.required]\n    });\n    this.delegatedForm = this.fb.group({\n      walletPassword: ['', Validators.required]\n    });\n    this.offlineForm = this.fb.group({\n      walletPassword: ['', Validators.required],\n      onlineColdStakingAddress: ['', Validators.required],\n      amount: ['', Validators.required],\n      fee: ['0.002', Validators.required]\n    });\n    this.coldStakingForm = this.fb.group({\n      walletPassword: ['', Validators.required]\n    });\n  }\n\n  localOnlineColdStakingAccounts = [];\n  selectedAccount;\n  selectedAddress;\n\n  onAccountChanged(event) {\n    this.offlineForm.controls['onlineColdStakingAddress'].setValue(event.value);\n  }\n\n  getMaxAmount() {\n    var balance = this.globalService.transform(this.wallet.confirmedBalance);\n    this.offlineForm.controls[\"amount\"].setValue(balance);\n  }\n\n  confirmedBalance;\n  unconfirmedBalance;\n  hasHotColdStakingBalance = false;\n  coldStakingHistory;\n  confirmedOfflineBalance;\n  unconfirmedOfflineBalance;\n  hasOfflineColdStakingBalance = false;\n  coldStakingOfflineHistory; // TODO: All of this code is a flying spaghetti monster mess!\n  // A proper manager to get state in correct order, etc. must be made, so do some refactoring later!\n\n  ngOnInit() {\n    this.localOnlineColdStakingAccounts = []; // Discover all online cold staking wallets:\n\n    this.appState.accounts.forEach(account => {\n      // \n      this.apiService.getColdStakingAddress(account.name, false, true).subscribe(address => {\n        this.localOnlineColdStakingAccounts.push({\n          name: account.name,\n          address: address.address\n        });\n        console.log(this.localOnlineColdStakingAccounts);\n      });\n    });\n    const walletInfo = new WalletInfo(this.globalService.getWalletName(), 'coldStakingHotAddresses');\n    const walletInfoOffline = new WalletInfo(this.globalService.getWalletName(), 'coldStakingColdAddresses');\n    this.apiService.getWalletHistory(walletInfo).subscribe(response => {\n      console.log(response);\n      this.coldStakingHistory = response.history[0].transactionsHistory;\n    }, error => {\n      console.error(error);\n      this.apiService.handleError(error);\n    });\n    this.apiService.getWalletBalance(walletInfo).subscribe(response => {\n      this.log.info('Get hot cold staking wallet balance:', response);\n      const balanceResponse = response;\n      this.confirmedBalance = balanceResponse.balances[0].amountConfirmed;\n      this.unconfirmedBalance = balanceResponse.balances[0].amountUnconfirmed;\n\n      if (this.confirmedBalance + this.unconfirmedBalance > 0) {\n        this.hasHotColdStakingBalance = true;\n      } else {\n        this.hasHotColdStakingBalance = false;\n      }\n    }, error => {\n      this.apiService.handleException(error);\n    });\n    this.apiService.getWalletHistory(walletInfoOffline).subscribe(response => {\n      console.log(response);\n      this.coldStakingOfflineHistory = response.history[0].transactionsHistory;\n    }, error => {\n      console.error(error);\n      this.apiService.handleError(error);\n    });\n    this.apiService.getWalletBalance(walletInfoOffline).subscribe(response => {\n      this.log.info('Get offline cold staking wallet balance:', response);\n      const balanceResponse = response;\n      this.confirmedOfflineBalance = balanceResponse.balances[0].amountConfirmed;\n      this.unconfirmedOfflineBalance = balanceResponse.balances[0].amountUnconfirmed;\n\n      if (this.confirmedOfflineBalance + this.unconfirmedOfflineBalance > 0) {\n        this.hasOfflineColdStakingBalance = true;\n      } else {\n        this.hasOfflineColdStakingBalance = false;\n      }\n    }, error => {\n      this.apiService.handleException(error);\n    });\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort; // \"Cannot read property 'length' of undefined\" error when setting to empty value.\n\n    if (this.wallet.transactionArray != null) {\n      this.parseHistory(this.wallet.transactionArray); // this.dataSource.data = this.wallet.transactionArray;\n    } // We will only retrieve UTXOs statistics if user has enable advanced mode.\n\n\n    if (this.appModes.enabled('staking')) {\n      const walletInfo = new WalletInfo(this.globalService.getWalletName());\n      this.apiService.getWalletStatistics(walletInfo).subscribe(data => {\n        console.log(data);\n        this.walletStatistics = data;\n        this.ref.detectChanges();\n      });\n    }\n\n    this.walletServiceSubscription = this.wallet.history$.subscribe(items => {\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n      this.parseHistory(items);\n      this.ref.detectChanges(); // this.dataSource.paginator = this.paginator;\n      // this.dataSource.sort = this.sort;\n    });\n    this.coldStakingSubscription = this.apiService.getColdStakingInfo(this.globalService.getWalletName()).subscribe(data => {\n      console.log('Cold Staking Info: ', data);\n      this.coldStakingInfo = data;\n\n      if (this.coldStakingInfo && this.coldStakingInfo.coldWalletAccountExists || this.coldStakingInfo.hotWalletAccountExists) {\n        this.mode = 'enabled';\n      }\n\n      if (this.coldStakingInfo.coldWalletAccountExists) {\n        this.apiService.getColdStakingAddress(this.globalService.getWalletName(), true, true).subscribe(data => {\n          console.log('Delegated Staking Address: ', data);\n          this.delegatedStakingAddress = data.address;\n        });\n      }\n\n      if (this.coldStakingInfo.hotWalletAccountExists) {\n        this.apiService.getColdStakingAddress(this.globalService.getWalletName(), false, true).subscribe(data => {\n          console.log('Cold Staking Address: ', data);\n          this.coldStakingAddress = data.address;\n        });\n      }\n    }); // We probably need to figure out what flag to look for to see if segwit is required. We can't allow user to select this.\n    // (this.appState.addressType === 'Segwit')\n  }\n\n  ngOnDestroy() {\n    if (this.walletServiceSubscription) {\n      this.walletServiceSubscription.unsubscribe();\n    }\n\n    if (this.coldStakingSubscription) {\n      this.coldStakingSubscription.unsubscribe();\n    }\n  }\n\n  selectRow(row) {\n    console.log(row);\n  }\n\n  filterHistory(link) {\n    this.activeLink = link;\n    this.applyFilter(this.activeLink.filter);\n  }\n\n  applyFilter(filterValue) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  mode = '';\n\n  setMode(mode) {\n    this.mode = mode;\n\n    if (!this.mode) {\n      this.stakingForm.reset();\n      this.coldStakingForm.reset();\n      this.offlineForm.reset();\n      this.delegatedForm.reset();\n    }\n  }\n\n  invalidPassword;\n\n  setupStaking() {\n    this.invalidPassword = false;\n    let amount = +this.offlineForm.get('amount').value;\n    const confirmedBalance = +this.globalService.transform(this.wallet.confirmedBalance);\n    const fee = +this.offlineForm.get('fee').value; // Basic protection against mistakes.\n\n    if (fee > amount) {\n      throw Error('You cannot have a fee that is larger than the amount.');\n    } // If the amount and fee is larger than balance, remove fee from amount.\n\n\n    if (amount + fee > confirmedBalance) {\n      amount = amount - fee;\n    }\n\n    this.apiService.setupOfflineColdStaking(this.globalService.getWalletName(), this.offlineForm.get('walletPassword').value, 'account 0', this.delegatedStakingAddress, this.offlineForm.get('onlineColdStakingAddress').value, amount, fee, true, // segwit change address\n    true // paytoscript\n    ).subscribe(response => {\n      this.log.info('offline cold staking transaction hex:', response.transactionHex); // Broadcast transaction:\n\n      this.apiService.sendTransaction(new TransactionSending(response.transactionHex)).subscribe(response => {\n        this.log.info('Transaction broadcasted successfully and cold staking activated!', response);\n      }, error => {\n        console.error(error);\n        this.apiService.handleException(error);\n      });\n    }, error => {\n      if (error.error.errors[0]?.message.indexOf('Invalid password') > -1) {\n        this.invalidPassword = true;\n      }\n\n      this.apiService.handleException(error);\n    });\n  }\n\n  enableDelegatedStaking() {\n    this.apiService.enableColdStaking(this.globalService.getWalletName(), this.delegatedForm.get('walletPassword').value, true).subscribe(response => {\n      this.log.info('delegated staking enabled:', response);\n    }, error => {\n      this.apiService.handleException(error);\n    });\n    this.delegatedForm.patchValue({\n      walletPassword: ''\n    });\n  }\n\n  enableColdStaking() {\n    this.apiService.enableColdStaking(this.globalService.getWalletName(), this.coldStakingForm.get('walletPassword').value, false).subscribe(response => {\n      this.log.info('cold staking enabled:', response);\n    }, error => {\n      this.apiService.handleException(error);\n    });\n    this.coldStakingForm.patchValue({\n      walletPassword: ''\n    });\n  }\n\n  parseHistory(items) {\n    this.dataSource.data = items;\n\n    if (items.length > 0) {\n      const firstTransaction = items[items.length - 1];\n      this.firstTransactionDate = new Date(firstTransaction.transactionTimestamp * 1000);\n      this.countSent = items.filter(i => i.transactionType === 'sent').length;\n      this.countReceived = items.filter(i => i.transactionType === 'received').length;\n      this.links[0].title = 'All (' + items.length + ')';\n      this.links[1].title = 'Received (' + this.countReceived + ')';\n      this.links[2].title = 'Sent (' + this.countSent + ')';\n    }\n  }\n\n  stopStaking() {\n    this.wallet.stopStaking();\n  }\n\n  startStaking() {\n    this.wallet.startStaking(this.stakingForm.get('walletPassword').value);\n    this.stakingForm.patchValue({\n      walletPassword: ''\n    });\n  }\n\n  openTransactionDetails(transaction) {\n    this.detailsService.show(transaction);\n  }\n\n  static ɵfac = function StakingComponent_Factory(t) {\n    return new (t || StakingComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.GlobalService), i0.ɵɵdirectiveInject(i3.WalletService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.ApplicationStateService), i0.ɵɵdirectiveInject(i6.DetailsService), i0.ɵɵdirectiveInject(i3.WalletService), i0.ɵɵdirectiveInject(i7.AppModes), i0.ɵɵdirectiveInject(i8.MatDialog), i0.ɵɵdirectiveInject(i9.Logger), i0.ɵɵdirectiveInject(i10.FormBuilder), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: StakingComponent,\n    selectors: [[\"app-staking\"]],\n    viewQuery: function StakingComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatPaginator, 7);\n        i0.ɵɵviewQuery(MatSort, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function StakingComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"wallet\", ctx.hostClass);\n      }\n    },\n    decls: 85,\n    vars: 32,\n    consts: [[\"color\", \"primary\", \"backgroundColor\", \"accent\"], [\"mat-tab-label\", \"\"], [1, \"content\"], [\"app-grid-cell\", \"\", \"gcColSpan\", \"2\", \"gcRowSpan\", \"1\", 1, \"card\", \"card-body\"], [1, \"grid-card\"], [1, \"dim\"], [\"app-grid-cell\", \"\", 1, \"card\", \"card-body\"], [1, \"tab-icon\"], [\"app-grid-cell\", \"\", \"class\", \"card card-body\", 4, \"ngIf\"], [\"app-grid-cell\", \"\", \"gcRowSpan\", \"2\", \"class\", \"card card-body\", 4, \"ngIf\"], [\"app-grid-cell\", \"\", \"gcRowSpan\", \"2\", 1, \"card\", \"card-body\"], [1, \"mat-caption\"], [\"app-grid-cell\", \"\", \"gcColSpan\", \"2\", \"gcRowSpan\", \"1\", \"class\", \"card card-body\", 4, \"ngIf\"], [\"mat-subheader\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"app-grid-cell\", \"\", \"gcColSpan\", \"2\", \"gcRowSpan\", \"2\", \"class\", \"card card-body\", 4, \"ngIf\"], [\"class\", \"grid-card\", 4, \"ngIf\"], [1, \"center-align\"], [3, \"formGroup\"], [1, \"form-group\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"type\", \"password\", \"id\", \"inputPassword\", \"formControlName\", \"walletPassword\", \"placeholder\", \"Fill out to unlock wallet\"], [\"mat-fab\", \"\", \"color\", \"accent\", 3, \"disabled\", \"click\"], [\"mat-fab\", \"\", \"color\", \"warn\", 3, \"disabled\", \"click\"], [\"type\", \"button\", \"color\", \"primary\", \"mat-flat-button\", \"\", 3, \"click\"], [\"matInput\", \"\", \"type\", \"password\", \"formControlName\", \"walletPassword\", \"placeholder\", \"Fill out to unlock wallet\"], [\"type\", \"button\", \"color\", \"primary\", \"mat-flat-button\", \"\", 3, \"disabled\", \"click\"], [\"type\", \"button\", \"mat-flat-button\", \"\", 3, \"click\"], [\"mat-list-icon\", \"\", 4, \"ngIf\"], [\"mat-line\", \"\"], [\"mat-list-icon\", \"\"], [\"placeholder\", \"Select wallet\", 3, \"selectionChange\"], [3, \"value\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"onlineColdStakingAddress\", \"placeholder\", \"Address from an online cold staking wallet\"], [\"href\", \"https://www.blockcore.net/staking\", \"target\", \"_blank\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"amount\", \"placeholder\", \"Amount from the balance to activate for staking\"], [\"mat-button\", \"\", 3, \"click\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"fee\", \"placeholder\", \"Fee on the transaction\"], [4, \"ngIf\"], [\"app-grid-cell\", \"\", \"gcColSpan\", \"2\", \"gcRowSpan\", \"2\", 1, \"card\", \"card-body\"]],\n    template: function StakingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-tab-group\", 0)(1, \"mat-tab\");\n        i0.ɵɵtemplate(2, StakingComponent_ng_template_2_Template, 3, 0, \"ng-template\", 1);\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"app-grid-container\")(5, \"div\", 3)(6, \"mat-card\", 4)(7, \"mat-card-title\");\n        i0.ɵɵtext(8, \"Hot Staking\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mat-card-content\", 5);\n        i0.ɵɵtext(10, \" Hot staking requires your computer and the software to be online at all times. It also requires you to have your password to unlock the wallet. \");\n        i0.ɵɵelement(11, \"br\")(12, \"br\");\n        i0.ɵɵtext(13, \" This form of staking is less secure than cold staking, as it requires your password to be kept in-memory as long as your are staking. \");\n        i0.ɵɵelement(14, \"br\")(15, \"br\");\n        i0.ɵɵtext(16, \" When you enable this type of staking, all of your balance will be used for staking. \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(17, \"div\", 6)(18, \"mat-card\", 4)(19, \"mat-card-title\");\n        i0.ɵɵtext(20);\n        i0.ɵɵpipe(21, \"coinNotation\");\n        i0.ɵɵpipe(22, \"coinNotation\");\n        i0.ɵɵelementStart(23, \"mat-icon\", 7);\n        i0.ɵɵtext(24, \"local_fire_department\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"mat-card-subtitle\");\n        i0.ɵɵtext(26);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"mat-card-content\")(28, \"strong\");\n        i0.ɵɵtext(29);\n        i0.ɵɵpipe(30, \"coinNotation\");\n        i0.ɵɵpipe(31, \"coinNotation\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"em\");\n        i0.ɵɵtext(33, \" (unconfirmed)\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵtemplate(34, StakingComponent_div_34_Template, 17, 13, \"div\", 8);\n        i0.ɵɵtemplate(35, StakingComponent_div_35_Template, 3, 2, \"div\", 8);\n        i0.ɵɵtemplate(36, StakingComponent_div_36_Template, 2, 1, \"div\", 8);\n        i0.ɵɵtemplate(37, StakingComponent_div_37_Template, 6, 1, \"div\", 8);\n        i0.ɵɵtemplate(38, StakingComponent_div_38_Template, 8, 7, \"div\", 8);\n        i0.ɵɵtemplate(39, StakingComponent_div_39_Template, 8, 7, \"div\", 8);\n        i0.ɵɵtemplate(40, StakingComponent_div_40_Template, 6, 1, \"div\", 8);\n        i0.ɵɵtemplate(41, StakingComponent_div_41_Template, 20, 6, \"div\", 9);\n        i0.ɵɵelementStart(42, \"div\", 10)(43, \"div\", 11);\n        i0.ɵɵtext(44, \" You can stake the balance you have in your wallet. If you just received your coins, it might take a while for staking to start, due to confirmation requirement for staked coins. \");\n        i0.ɵɵelement(45, \"br\");\n        i0.ɵɵtext(46, \"When you stop staking, or receive stake rewards, it will take some time before the same coins can be used for staking. \");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(47, \"mat-tab\");\n        i0.ɵɵtemplate(48, StakingComponent_ng_template_48_Template, 3, 0, \"ng-template\", 1);\n        i0.ɵɵelementStart(49, \"div\", 2)(50, \"app-grid-container\")(51, \"div\", 3)(52, \"mat-card\", 4)(53, \"mat-card-title\");\n        i0.ɵɵtext(54, \"Cold Staking\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(55, \"mat-card-content\", 5);\n        i0.ɵɵtext(56, \" Your wallet can only do either offline cold staking or online cold staking. You have to make a decision which type of cold staking you want to perform. \");\n        i0.ɵɵelement(57, \"br\")(58, \"br\");\n        i0.ɵɵtext(59, \" You can of course make multiple wallets, one where you are doing offline cold staking and another wallet you are performing online cold staking. \");\n        i0.ɵɵelement(60, \"br\")(61, \"br\");\n        i0.ɵɵtext(62, \" Offline staking allows you to stake without your computer being online, by using a third party server or your own server. \");\n        i0.ɵɵelement(63, \"br\")(64, \"br\");\n        i0.ɵɵtext(65, \" This form of staking is more secure than hot staking. \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(66, StakingComponent_div_66_Template, 22, 0, \"div\", 12);\n        i0.ɵɵtemplate(67, StakingComponent_div_67_Template, 22, 2, \"div\", 12);\n        i0.ɵɵtemplate(68, StakingComponent_div_68_Template, 22, 2, \"div\", 12);\n        i0.ɵɵtemplate(69, StakingComponent_div_69_Template, 7, 0, \"div\", 8);\n        i0.ɵɵtemplate(70, StakingComponent_div_70_Template, 8, 1, \"div\", 8);\n        i0.ɵɵelementStart(71, \"div\", 3)(72, \"mat-card\", 4)(73, \"mat-card-title\");\n        i0.ɵɵtext(74, \"History\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(75, \"mat-card-content\", 5)(76, \"mat-list\")(77, \"div\", 13);\n        i0.ɵɵtext(78, \"Transactions\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(79, StakingComponent_mat_list_item_79_Template, 11, 11, \"mat-list-item\", 14);\n        i0.ɵɵtemplate(80, StakingComponent_mat_list_item_80_Template, 11, 11, \"mat-list-item\", 14);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵtemplate(81, StakingComponent_div_81_Template, 48, 4, \"div\", 12);\n        i0.ɵɵtemplate(82, StakingComponent_div_82_Template, 8, 0, \"div\", 8);\n        i0.ɵɵtemplate(83, StakingComponent_div_83_Template, 8, 1, \"div\", 8);\n        i0.ɵɵtemplate(84, StakingComponent_div_84_Template, 17, 13, \"div\", 15);\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(20);\n        i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(21, 24, ctx.wallet.confirmedBalance) || i0.ɵɵpipeBind1(22, 26, 0), \" \", ctx.wallet.coinUnit, \" \");\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\"Balance of hot wallet: \", ctx.wallet.walletName, \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(30, 28, ctx.wallet.unconfirmedBalance) || i0.ɵɵpipeBind1(31, 30, 0), \" \", ctx.wallet.coinUnit, \"\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.hasHotColdStakingBalance);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.wallet.hasBalance || ctx.hasHotColdStakingBalance);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.wallet.hasBalance);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.wallet.stakingEnabled);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.wallet.stakingEnabled);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.wallet.stakingEnabled);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.wallet.stakingEnabled);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.wallet.stakingEnabled);\n        i0.ɵɵadvance(25);\n        i0.ɵɵproperty(\"ngIf\", ctx.mode === \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.mode === \"online\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.mode === \"offline\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.coldStakingInfo == null ? null : ctx.coldStakingInfo.coldWalletAccountExists);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.delegatedStakingAddress);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.coldStakingHistory);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.coldStakingOfflineHistory);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.coldStakingInfo == null ? null : ctx.coldStakingInfo.coldWalletAccountExists);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.coldStakingInfo == null ? null : ctx.coldStakingInfo.hotWalletAccountExists);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.coldStakingAddress);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.coldStakingAddress);\n      }\n    },\n    directives: [i11.MatTabGroup, i11.MatTab, i11.MatTabLabel, i12.MatIcon, i13.GridContainerComponent, i14.GridCellDirective, i15.MatCard, i15.MatCardTitle, i15.MatCardContent, i15.MatCardSubtitle, i16.NgIf, i10.ɵNgNoValidate, i10.NgControlStatusGroup, i10.FormGroupDirective, i17.MatFormField, i17.MatLabel, i18.MatInput, i10.DefaultValueAccessor, i10.NgControlStatus, i10.FormControlName, i19.MatButton, i20.MatList, i20.MatListSubheaderCssMatStyler, i16.NgForOf, i20.MatListItem, i20.MatListIconCssMatStyler, i21.MatLine, i22.MatSelect, i21.MatOption],\n    pipes: [i23.CoinNotationPipe, i16.DecimalPipe, i16.DatePipe],\n    styles: [\".dim {\\n  color: rgba(255, 255, 255, 0.7);\\n}\\n\\n.wallet div[fxLayoutAlign] {\\n  padding: 10px;\\n  padding-left: 25px;\\n  padding-top: 15px;\\n}\\n\\n.wallet .dashboard-card {\\n  min-height: 150px;\\n}\\n\\n.wallet .mat-card {\\n  margin-bottom: 20px;\\n}\\n\\n.wallet mat-card {\\n  margin-bottom: 20px;\\n}\\n\\n.wallet .dashboard-split-card {\\n  display: flex;\\n  flex-direction: row;\\n}\\n\\n.wallet .dashboard-split-left {\\n  flex-grow: 2;\\n  min-width: 230px;\\n  width: 65%;\\n}\\n\\n.wallet .dashboard-split-right {\\n  padding-left: 20px;\\n  flex-grow: 1;\\n  width: 35%;\\n  align-self: center;\\n}\\n\\n@media screen and (max-width: 599px) {\\n  .wallet .dashboard-split-card {\\n    flex-direction: column;\\n  }\\n  .wallet .dashboard-split-left {\\n    flex-grow: 2;\\n    width: 100%;\\n  }\\n  .wallet .dashboard-split-right {\\n    flex-grow: 1;\\n    width: 100%;\\n    align-self: center;\\n  }\\n}\\n\\n.wallet .break-everything {\\n  clear: both;\\n}\\n\\n.wallet .link {\\n  cursor: pointer;\\n}\\n\\n.wallet .wallet-no-transactions {\\n  text-align: center;\\n  margin-top: 20px;\\n}\\n\\n.wallet .wallet-transactions-table {\\n  width: 100%;\\n}\\n\\n.wallet .wallet-transactions-table .unconfirmed {\\n  font-style: italic;\\n  color: rgba(192, 192, 192, 0.75);\\n}\\n\\n.wallet .wallet-confirmed-icon {\\n  font-size: 14px;\\n}\\n\\n.wallet .wallet-split-card {\\n  display: flex;\\n  flex-direction: row;\\n}\\n\\n.wallet .wallet-split-left {\\n  flex-grow: 2;\\n  min-width: 230px;\\n  width: 65%;\\n}\\n\\n.wallet .wallet-split-right {\\n  padding-left: 20px;\\n  flex-grow: 1;\\n  width: 35%;\\n  align-self: center;\\n}\\n\\n.wallet .wallet-info-icon {\\n  float: right;\\n  cursor: default;\\n}\\n\\n@media screen and (max-width: 599px) {\\n  .wallet .wallet-split-card {\\n    flex-direction: column;\\n  }\\n  .wallet .wallet-split-left {\\n    flex-grow: 2;\\n    width: 100%;\\n  }\\n  .wallet .wallet-split-right {\\n    flex-grow: 1;\\n    width: 100%;\\n    align-self: center;\\n  }\\n}\\n\\n.dashboard .history {\\n  width: 80%;\\n}\\n\\n.dashboard .history .history-table {\\n  width: 100%;\\n}\\n\\n.dashboard div[fxLayoutAlign] {\\n  padding: 10px;\\n  padding-left: 25px;\\n  padding-top: 15px;\\n}\\n\\n.dashboard .dashboard-card {\\n  min-height: 150px;\\n}\\n\\n.dashboard .mat-grid-tile .mat-figure {\\n  align-items: flex-start;\\n}\\n\\n.dashboard .dashboard-coinmap {\\n  min-height: 200px;\\n}\\n\\n.dashboard .dashboard-info-icon {\\n  float: right;\\n  cursor: default;\\n}\\n\\n.dashboard .transaction-details-button {\\n  height: 10px;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n.dashboard .transaction-details-button .mat-icon {\\n  font-size: 10px;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n.dashboard .link {\\n  cursor: pointer;\\n}\\n\\n.dashboard mat-card {\\n  margin-bottom: 20px;\\n}\\n\\n.dashboard .dashboard-split-card {\\n  display: flex;\\n  flex-direction: row;\\n}\\n\\n.dashboard .dashboard-split-left {\\n  flex-grow: 2;\\n  min-width: 230px;\\n  width: 65%;\\n}\\n\\n.dashboard .dashboard-split-right {\\n  padding-left: 20px;\\n  flex-grow: 1;\\n  width: 35%;\\n  align-self: center;\\n}\\n\\n.dashboard .marketprice {\\n  color: green;\\n}\\n\\n.dashboard .marketprice-negative {\\n  color: red;\\n}\\n\\n.dashboard .marketprice-larger {\\n  font-size: 1.2rem;\\n}\\n\\n.dashboard .marketprice-table {\\n  width: 100%;\\n}\\n\\n@media screen and (max-width: 599px) {\\n  .dashboard .dashboard-split-card {\\n    flex-direction: column;\\n  }\\n  .dashboard .dashboard-split-left {\\n    flex-grow: 2;\\n    width: 100%;\\n  }\\n  .dashboard .dashboard-split-right {\\n    flex-grow: 1;\\n    width: 100%;\\n    align-self: center;\\n  }\\n}\"],\n    encapsulation: 2\n  });\n}","map":null,"metadata":{},"sourceType":"module"}