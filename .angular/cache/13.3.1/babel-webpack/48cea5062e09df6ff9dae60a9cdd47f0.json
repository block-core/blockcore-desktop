{"ast":null,"code":"import _classCallCheck from \"D:\\\\Github\\\\Miladsoft\\\\blockcore-hub-1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"D:\\\\Github\\\\Miladsoft\\\\blockcore-hub-1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/application-state.service\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"../../../services/details.service\";\nimport * as i4 from \"../../../services/api.service\";\nimport * as i5 from \"@angular/common/http\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"../../../services/global.service\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/card\";\nimport * as i10 from \"@angular/material/tabs\";\n\nfunction TransactionHistoryComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Loading...\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TransactionHistoryComponent_div_2_mat_card_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card\", 5)(1, \"h2\");\n    i0.ɵɵtext(2, \"Details\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction TransactionHistoryComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"mat-card\", 5)(2, \"h2\");\n    i0.ɵɵtext(3, \"Info\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 6)(5, \"div\", 7);\n    i0.ɵɵtext(6, \"Output\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 8);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(9, TransactionHistoryComponent_div_2_mat_card_9_Template, 3, 0, \"mat-card\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r1.transaction.output, \" \", ctx_r1.coinUnit, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.transaction);\n  }\n}\n\nfunction TransactionHistoryComponent_mat_tab_group_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-tab-group\", 10)(1, \"mat-tab\", 11)(2, \"div\", 12)(3, \"em\");\n    i0.ɵɵtext(4, \"Not supported. Will be available in a future update.\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(5, \"mat-tab\", 13)(6, \"div\", 12)(7, \"em\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.transactionJson, \" \");\n  }\n}\n\nexport var TransactionHistoryComponent = /*#__PURE__*/(function () {\n  var TransactionHistoryComponent = /*#__PURE__*/function () {\n    function TransactionHistoryComponent(appState, snackBar, detailsService, apiService, http, route, globalService) {\n      _classCallCheck(this, TransactionHistoryComponent);\n\n      this.appState = appState;\n      this.snackBar = snackBar;\n      this.detailsService = detailsService;\n      this.apiService = apiService;\n      this.http = http;\n      this.route = route;\n      this.globalService = globalService;\n      this.hostClass = true;\n      this.copied = false;\n      this.appState.pageMode = true;\n    }\n\n    _createClass(TransactionHistoryComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this = this;\n\n        this.route.params.subscribe(function (params) {\n          _this.getTransaction(params.id);\n        });\n        this.coinUnit = this.globalService.getCoinUnit();\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.appState.pageMode = false;\n      }\n    }, {\n      key: \"onCopiedClick\",\n      value: function onCopiedClick() {\n        this.snackBar.open('The transaction ID has been copied to your clipboard.', null, {\n          duration: 3000\n        });\n        return false;\n      }\n    }, {\n      key: \"getTransaction\",\n      value: function getTransaction(id) {\n        var _this2 = this;\n\n        var url = this.apiService.apiUrl + '/' + this.apiService.apiVersion + '/transactions/' + id;\n        this.http.get(url).pipe(map(function (data) {\n          return data;\n        })).subscribe(function (item) {\n          _this2.transaction = item;\n          _this2.transactionJson = JSON.stringify(item);\n          var out = 0;\n\n          if (_this2.transaction.vout != null) {\n            _this2.transaction.vout.forEach(function (script) {\n              if (script.value) {\n                out += script.value;\n              }\n            });\n          }\n\n          _this2.transaction.output = out;\n        });\n      }\n    }]);\n\n    return TransactionHistoryComponent;\n  }();\n\n  TransactionHistoryComponent.ɵfac = function TransactionHistoryComponent_Factory(t) {\n    return new (t || TransactionHistoryComponent)(i0.ɵɵdirectiveInject(i1.ApplicationStateService), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.DetailsService), i0.ɵɵdirectiveInject(i4.ApiService), i0.ɵɵdirectiveInject(i5.HttpClient), i0.ɵɵdirectiveInject(i6.ActivatedRoute), i0.ɵɵdirectiveInject(i7.GlobalService));\n  };\n\n  TransactionHistoryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TransactionHistoryComponent,\n    selectors: [[\"app-history-transaction\"]],\n    hostVars: 2,\n    hostBindings: function TransactionHistoryComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"transaction\", ctx.hostClass);\n      }\n    },\n    decls: 4,\n    vars: 3,\n    consts: [[1, \"content\"], [4, \"ngIf\"], [\"class\", \"content-cards\", 4, \"ngIf\"], [\"mat-stretch-tabs\", \"\", \"class\", \"history-transaction-stretched-tabs mat-elevation-z4\", 4, \"ngIf\"], [1, \"content-cards\"], [1, \"transaction-details-card\"], [1, \"transaction-details\"], [1, \"transaction-details-label\"], [1, \"transaction-details-value\"], [\"class\", \"transaction-details-card\", 4, \"ngIf\"], [\"mat-stretch-tabs\", \"\", 1, \"history-transaction-stretched-tabs\", \"mat-elevation-z4\"], [\"label\", \"Inputs / Outputs\"], [1, \"tab-pane\"], [\"label\", \"Raw Transaction\"]],\n    template: function TransactionHistoryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, TransactionHistoryComponent_div_1_Template, 2, 0, \"div\", 1);\n        i0.ɵɵtemplate(2, TransactionHistoryComponent_div_2_Template, 10, 3, \"div\", 2);\n        i0.ɵɵtemplate(3, TransactionHistoryComponent_mat_tab_group_3_Template, 9, 1, \"mat-tab-group\", 3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.transaction);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.transaction);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.transaction);\n      }\n    },\n    directives: [i8.NgIf, i9.MatCard, i10.MatTabGroup, i10.MatTab],\n    styles: [\".transaction .content-cards,.transaction .transaction-details{display:flex;flex-direction:row}.transaction .transaction-details-label{width:120px;margin-right:20px}.transaction .transaction-details-card{margin-right:20px;margin-bottom:20px;flex:1 1 auto;width:50%}.transaction .transaction-navigate-card{margin-bottom:20px;padding:2px;width:50px}.transaction .tab-pane{padding:10px}.transaction .transactions-table{width:100%}\\n\"],\n    encapsulation: 2\n  });\n  return TransactionHistoryComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}